{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nexport const useForm = (initialState = {}, validate, callback) => {\n  _s();\n\n  const [values, setValues] = useState(initialState);\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n      setIsSubmitting(false);\n    }\n  }, [errors, callback, isSubmitting]);\n\n  const handleSubmit = e => {\n    e && e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n  const reset = (newState = initialState) => {\n    setValues(newState);\n  };\n\n  const handleInputChange = ({\n    target\n  }) => {\n    setValues({ ...values,\n      [target.name]: target.value\n    });\n  };\n\n  return [values, handleInputChange, handleSubmit, errors, reset];\n};\n\n_s(useForm, \"zm4mESUNKUZQRnpC5okn5rz2GbE=\");","map":{"version":3,"sources":["/home/marceliux/Development/BoilerLog/NodeTask/src/client/src/components/hooks/useForm.js"],"names":["useState","useEffect","useForm","initialState","validate","callback","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","Object","keys","length","handleSubmit","e","preventDefault","reset","newState","handleInputChange","target","name","value"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,MAAMC,OAAO,GAAG,CAAEC,YAAY,GAAG,EAAjB,EAAqBC,QAArB,EAA+BC,QAA/B,KAA6C;AAAA;;AAEhE,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAACG,YAAD,CAApC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,KAAD,CAAhD;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGW,MAAM,CAACC,IAAP,CAAYL,MAAZ,EAAoBM,MAApB,KAA+B,CAA/B,IAAoCJ,YAAvC,EAAoD;AAChDL,MAAAA,QAAQ;AACRM,MAAAA,eAAe,CAAC,KAAD,CAAf;AACH;AAEJ,GANQ,EAOP,CAACH,MAAD,EAASH,QAAT,EAAmBK,YAAnB,CAPO,CAAT;;AASA,QAAMK,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,IAAIA,CAAC,CAACC,cAAF,EAAL;AACAR,IAAAA,SAAS,CAACL,QAAQ,CAACE,MAAD,CAAT,CAAT;AACAK,IAAAA,eAAe,CAAC,IAAD,CAAf;AACH,GAJD;;AAMA,QAAMO,KAAK,GAAG,CAACC,QAAQ,GAAGhB,YAAZ,KAA6B;AACvCI,IAAAA,SAAS,CAACY,QAAD,CAAT;AACH,GAFD;;AAIA,QAAMC,iBAAiB,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgB;AACtCd,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,OAAEe,MAAM,CAACC,IAAT,GAAiBD,MAAM,CAACE;AAFlB,KAAD,CAAT;AAIH,GALD;;AAOA,SAAO,CAAEjB,MAAF,EAAUc,iBAAV,EAA6BL,YAA7B,EAA2CP,MAA3C,EAAmDU,KAAnD,CAAP;AAEH,CAnCM;;GAAMhB,O","sourcesContent":["import { useState, useEffect } from 'react'\n\nexport const useForm = ( initialState = {}, validate, callback ) => {\n\n    const [values, setValues] = useState(initialState)\n    const [errors, setErrors] = useState({})\n    const [isSubmitting, setIsSubmitting] = useState(false)\n\n\n    useEffect(() => {\n        if(Object.keys(errors).length === 0 && isSubmitting){\n            callback()\n            setIsSubmitting(false)\n        }\n\n    }    \n    , [errors, callback, isSubmitting])    \n\n    const handleSubmit = (e) => {\n        e && e.preventDefault()\n        setErrors(validate(values))\n        setIsSubmitting(true)\n    }\n\n    const reset = (newState = initialState) => {\n        setValues(newState)\n    }\n\n    const handleInputChange = ({ target }) => {\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        })\n    }\n\n    return [ values, handleInputChange, handleSubmit, errors, reset]\n\n}"]},"metadata":{},"sourceType":"module"}