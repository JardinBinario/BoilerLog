{"ast":null,"code":"var _jsxFileName = \"/home/marceliux/Development/BoilerLog/NodeTask/src/client/src/routers/AppRouter.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { AuthRouter } from './AuthRouter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startChecking } from '../actions/auth';\nimport { Spinner } from '../components/ui/Spinner';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\nimport { ScheduleScreen } from '../components/screens/ScheduleScreen';\nimport { DashboardRoutes } from './DashboardRoutes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppRouter = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    checking,\n    uid\n  } = useSelector(state => state.auth);\n  useEffect(() => {\n    dispatch(startChecking());\n  }, [dispatch]);\n\n  if (checking) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        height: '100vh',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        size: \"big\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/public/schedule/:_id\",\n          component: ScheduleScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          isAuthenticated: !!uid,\n          path: \"/dentaltask\",\n          component: DashboardRoutes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PublicRoute, {\n          path: \"/\",\n          isAuthenticated: !!uid,\n          component: AuthRouter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AppRouter, \"lc3LPYBsxiNImgOz7txk1BCVWNk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"sources":["/home/marceliux/Development/BoilerLog/NodeTask/src/client/src/routers/AppRouter.jsx"],"names":["React","useEffect","BrowserRouter","Router","Switch","Route","AuthRouter","useDispatch","useSelector","startChecking","Spinner","PrivateRoute","PublicRoute","ScheduleScreen","DashboardRoutes","AppRouter","dispatch","checking","uid","state","auth","display","height","alignItems"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,cAAT,QAA+B,sCAA/B;AACA,SAASC,eAAT,QAAgC,mBAAhC;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAE3B,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AAEA,QAAM;AAACU,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAkBV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAnC;AAEAnB,EAAAA,SAAS,CAAC,MAAK;AACXe,IAAAA,QAAQ,CAACP,aAAa,EAAd,CAAR;AACH,GAFQ,EAEN,CAACO,QAAD,CAFM,CAAT;;AAIA,MAAIC,QAAJ,EAAa;AACT,wBACI;AAAK,MAAA,KAAK,EAAE;AAACI,QAAAA,OAAO,EAAE,MAAV;AAAkBC,QAAAA,MAAM,EAAE,OAA1B;AAAmCC,QAAAA,UAAU,EAAE;AAA/C,OAAZ;AAAA,6BACI,QAAC,OAAD;AAAS,QAAA,IAAI,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAED,sBACI,QAAC,MAAD;AAAA,2BACI;AAAA,6BACI,QAAC,MAAD;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,uBAAZ;AAAoC,UAAA,SAAS,EAAEV;AAA/C;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,YAAD;AAAc,UAAA,eAAe,EAAE,CAAC,CAACK,GAAjC;AAAsC,UAAA,IAAI,EAAC,aAA3C;AAAyD,UAAA,SAAS,EAAEJ;AAApE;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,WAAD;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,eAAe,EAAE,CAAC,CAACI,GAAzC;AAA8C,UAAA,SAAS,EAAEZ;AAAzD;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA7BM;;GAAMS,S;UAEQR,W,EAEOC,W;;;KAJfO,S","sourcesContent":["import React, { useEffect } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { AuthRouter } from './AuthRouter'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startChecking } from '../actions/auth'\nimport { Spinner } from '../components/ui/Spinner'\nimport { PrivateRoute } from './PrivateRoute'\nimport { PublicRoute } from './PublicRoute'\nimport { ScheduleScreen } from '../components/screens/ScheduleScreen'\nimport { DashboardRoutes } from './DashboardRoutes'\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch()\n\n    const {checking, uid} = useSelector(state => state.auth)\n\n    useEffect(()=> {\n        dispatch(startChecking())\n    }, [dispatch])\n\n    if (checking){\n        return(\n            <div style={{display: 'flex', height: '100vh', alignItems: 'center'}}>\n                <Spinner size=\"big\"/>\n            </div>\n        )\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <Route path=\"/public/schedule/:_id\" component={ScheduleScreen}/>\n                    <PrivateRoute isAuthenticated={!!uid} path=\"/dentaltask\" component={DashboardRoutes} />\n                    <PublicRoute path=\"/\" isAuthenticated={!!uid} component={AuthRouter}/>\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}