{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nexport const usePagination = (totalPacientes, pacientesPorPagina) => {\n  _s();\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [maxPage, setMaxPage] = useState(0);\n  const indexUltimoPaciente = currentPage * pacientesPorPagina;\n  const indexPrimerPaciente = indexUltimoPaciente - pacientesPorPagina;\n  const currentPacientes = totalPacientes.length > 8 || pacientesPorPagina === 1 ? totalPacientes.slice(indexPrimerPaciente, indexUltimoPaciente) : totalPacientes.slice(0, 8);\n  useEffect(() => {\n    const pageNumbers = [];\n\n    for (let i = 1; i <= Math.ceil(totalPacientes.length / pacientesPorPagina); i++) {\n      pageNumbers.push(i);\n      setMaxPage(pageNumbers.pop());\n    }\n  }, [totalPacientes, pacientesPorPagina, setMaxPage]);\n\n  const handleChangePage = type => {\n    switch (type) {\n      case \"back\":\n        if (currentPage > 1) setCurrentPage(currentPage - 1);\n        break;\n\n      case \"next\":\n        if (currentPage < maxPage) setCurrentPage(currentPage + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  return [currentPacientes, currentPage, handleChangePage, maxPage];\n};\n\n_s(usePagination, \"fWrsevomTwmnrVjc1QOY4KMZse4=\");","map":{"version":3,"sources":["/home/marceliux/Development/BoilerLog/NodeTask/src/client/src/components/hooks/usePagination.js"],"names":["useEffect","useState","usePagination","totalPacientes","pacientesPorPagina","currentPage","setCurrentPage","maxPage","setMaxPage","indexUltimoPaciente","indexPrimerPaciente","currentPacientes","length","slice","pageNumbers","i","Math","ceil","push","pop","handleChangePage","type"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAO,MAAMC,aAAa,GAAG,CAAEC,cAAF,EAAkBC,kBAAlB,KAA0C;AAAA;;AACnE,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAMQ,mBAAmB,GAAGJ,WAAW,GAAGD,kBAA1C;AACA,QAAMM,mBAAmB,GAAGD,mBAAmB,GAAGL,kBAAlD;AACA,QAAMO,gBAAgB,GAAGR,cAAc,CAACS,MAAf,GAAwB,CAAxB,IAA6BR,kBAAkB,KAAK,CAApD,GACnBD,cAAc,CAACU,KAAf,CAAqBH,mBAArB,EAA0CD,mBAA1C,CADmB,GAEnBN,cAAc,CAACU,KAAf,CAAqB,CAArB,EAAwB,CAAxB,CAFN;AAMAb,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMc,WAAW,GAAG,EAApB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUd,cAAc,CAACS,MAAf,GAAsBR,kBAAhC,CAArB,EAA0EW,CAAC,EAA3E,EAA+E;AAC3ED,MAAAA,WAAW,CAACI,IAAZ,CAAiBH,CAAjB;AACAP,MAAAA,UAAU,CAACM,WAAW,CAACK,GAAZ,EAAD,CAAV;AACH;AACJ,GANQ,EAMN,CAAChB,cAAD,EAAiBC,kBAAjB,EAAqCI,UAArC,CANM,CAAT;;AAQA,QAAMY,gBAAgB,GAAIC,IAAD,IAAU;AAC/B,YAAQA,IAAR;AACI,WAAK,MAAL;AACI,YAAGhB,WAAW,GAAG,CAAjB,EACIC,cAAc,CAACD,WAAW,GAAC,CAAb,CAAd;AACJ;;AACJ,WAAK,MAAL;AACI,YAAIA,WAAW,GAAGE,OAAlB,EACID,cAAc,CAACD,WAAW,GAAC,CAAb,CAAd;AACJ;;AACJ;AACI;AAVR;AAYH,GAbD;;AAgBA,SAAO,CAACM,gBAAD,EAAmBN,WAAnB,EAAgCe,gBAAhC,EAAkDb,OAAlD,CAAP;AAEH,CArCM;;GAAML,a","sourcesContent":["import { useEffect, useState } from 'react'\n\nexport const usePagination = ( totalPacientes, pacientesPorPagina ) => {\n    const [currentPage, setCurrentPage] = useState(1)\n    const [maxPage, setMaxPage] = useState(0)\n    const indexUltimoPaciente = currentPage * pacientesPorPagina\n    const indexPrimerPaciente = indexUltimoPaciente - pacientesPorPagina\n    const currentPacientes = totalPacientes.length > 8 || pacientesPorPagina === 1 \n        ? totalPacientes.slice(indexPrimerPaciente, indexUltimoPaciente)\n        : totalPacientes.slice(0, 8)\n    \n\n\n    useEffect(()=>{\n        const pageNumbers = []\n        for (let i = 1; i <= Math.ceil(totalPacientes.length/pacientesPorPagina); i++) {\n            pageNumbers.push(i)\n            setMaxPage(pageNumbers.pop())\n        }\n    }, [totalPacientes, pacientesPorPagina, setMaxPage])\n\n    const handleChangePage = (type) => {\n        switch (type) {\n            case \"back\":\n                if(currentPage > 1)\n                    setCurrentPage(currentPage-1)\n                break;\n            case \"next\":\n                if (currentPage < maxPage)\n                    setCurrentPage(currentPage+1)\n                break;\n            default:\n                return;\n        }\n    }\n\n\n    return [currentPacientes, currentPage, handleChangePage, maxPage]\n\n}"]},"metadata":{},"sourceType":"module"}