{"ast":null,"code":"import _slicedToArray from\"/home/marceliux/Development/BoilerLog/NodeTask/src/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useRef,useState}from'react';export var useCita=function useCita(_ref,callback){var _ref2=_slicedToArray(_ref,1),cita=_ref2[0];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),editNote=_useState2[0],setEditNote=_useState2[1];var _useState3=useState((cita===null||cita===void 0?void 0:cita.nota)||'No hay notas para esta cita, agrega una!'),_useState4=_slicedToArray(_useState3,2),nota=_useState4[0],setNota=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),stringEstado=_useState6[0],setStringEstado=_useState6[1];var activeCita=useRef(cita._id);var fecha=new Date(cita===null||cita===void 0?void 0:cita.fechaDeseada).toLocaleDateString(),newFecha=fecha==='Invalid Date'?'No hay citas':fecha,estado=cita===null||cita===void 0?void 0:cita.estado;var handleInputChange=function handleInputChange(_ref3){var target=_ref3.target;setNota(target.value);};var handleEditClick=function handleEditClick(){setEditNote(!editNote);if(editNote){callback();}};useEffect(function(){if(activeCita.current!==cita._id){setNota((cita===null||cita===void 0?void 0:cita.nota)||'No hay notas para esta cita, agrega una!');activeCita.current=cita._id;}setStringEstado(getEstadoString(estado));},[cita,estado]);var getEstadoString=function getEstadoString(estado){return estado==='CANCELADA'?'Cancelada':estado==='AGENDADA'?'Agendada':estado==='PENDIENTE'?'Pendiente':estado==='COMPLETADA'?'Completada':'';};return[editNote,handleEditClick,nota,handleInputChange,stringEstado,estado,newFecha];};","map":{"version":3,"sources":["/home/marceliux/Development/BoilerLog/NodeTask/src/client/src/components/hooks/useCita.js"],"names":["useEffect","useRef","useState","useCita","callback","cita","editNote","setEditNote","nota","setNota","stringEstado","setStringEstado","activeCita","_id","fecha","Date","fechaDeseada","toLocaleDateString","newFecha","estado","handleInputChange","target","value","handleEditClick","current","getEstadoString"],"mappings":"gLAAA,OAASA,SAAT,CAAoBC,MAApB,CAA4BC,QAA5B,KAA4C,OAA5C,CAEA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAASC,QAAT,CAAsB,kCAApBC,IAAoB,wBACTH,QAAQ,CAAC,KAAD,CADC,wCAClCI,QADkC,eACxBC,WADwB,8BAGjBL,QAAQ,CAAC,CAAAG,IAAI,OAAJ,EAAAA,IAAI,SAAJ,QAAAA,IAAI,CAAEG,IAAN,GAAc,0CAAf,CAHS,yCAGlCA,IAHkC,eAG5BC,OAH4B,8BAIDP,QAAQ,CAAC,EAAD,CAJP,yCAIlCQ,YAJkC,eAIpBC,eAJoB,eAMzC,GAAMC,CAAAA,UAAU,CAAGX,MAAM,CAACI,IAAI,CAACQ,GAAN,CAAzB,CAEA,GAAMC,CAAAA,KAAK,CAAG,GAAIC,CAAAA,IAAJ,CAASV,IAAT,SAASA,IAAT,iBAASA,IAAI,CAAEW,YAAf,EAA6BC,kBAA7B,EAAd,CACIC,QAAQ,CAAGJ,KAAK,GAAK,cAAV,CAA4B,cAA5B,CAA6CA,KAD5D,CAEIK,MAAM,CAAGd,IAAH,SAAGA,IAAH,iBAAGA,IAAI,CAAEc,MAFnB,CAIA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,OAAc,IAAZC,CAAAA,MAAY,OAAZA,MAAY,CACpCZ,OAAO,CAACY,MAAM,CAACC,KAAR,CAAP,CACH,CAFD,CAIA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC1BhB,WAAW,CAAC,CAACD,QAAF,CAAX,CACA,GAAGA,QAAH,CAAY,CACRF,QAAQ,GACX,CACJ,CALD,CAQAJ,SAAS,CAAC,UAAK,CACX,GAAGY,UAAU,CAACY,OAAX,GAAuBnB,IAAI,CAACQ,GAA/B,CAAmC,CAC/BJ,OAAO,CAAC,CAAAJ,IAAI,OAAJ,EAAAA,IAAI,SAAJ,QAAAA,IAAI,CAAEG,IAAN,GAAc,0CAAf,CAAP,CACAI,UAAU,CAACY,OAAX,CAAqBnB,IAAI,CAACQ,GAA1B,CACH,CACDF,eAAe,CAACc,eAAe,CAACN,MAAD,CAAhB,CAAf,CACH,CANQ,CAMN,CAACd,IAAD,CAAOc,MAAP,CANM,CAAT,CASA,GAAMM,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACN,MAAD,QACpBA,CAAAA,MAAM,GAAK,WAAX,CAAyB,WAAzB,CACAA,MAAM,GAAK,UAAX,CAAwB,UAAxB,CACAA,MAAM,GAAK,WAAX,CAAyB,WAAzB,CACAA,MAAM,GAAK,YAAX,CAA0B,YAA1B,CAAyC,EAJrB,EAAxB,CAOA,MAAO,CAAEb,QAAF,CAAYiB,eAAZ,CAA6Bf,IAA7B,CAAmCY,iBAAnC,CAAsDV,YAAtD,CAAoES,MAApE,CAA4ED,QAA5E,CAAP,CAEH,CA1CM","sourcesContent":["import { useEffect, useRef, useState } from 'react'\n\nexport const useCita = ([cita], callback) => {\n    const [editNote, setEditNote] = useState(false)\n    \n    const [nota, setNota] = useState(cita?.nota || 'No hay notas para esta cita, agrega una!')\n    const [stringEstado, setStringEstado] = useState('')\n\n    const activeCita = useRef(cita._id)\n\n    const fecha = new Date(cita?.fechaDeseada).toLocaleDateString(),\n        newFecha = fecha === 'Invalid Date' ?  'No hay citas' : fecha, \n        estado = cita?.estado\n\n    const handleInputChange = ({target}) => {\n        setNota(target.value)\n    }\n\n    const handleEditClick = () => {\n        setEditNote(!editNote)\n        if(editNote){\n            callback()\n        }\n    }\n\n\n    useEffect(()=> {\n        if(activeCita.current !== cita._id){\n            setNota(cita?.nota || 'No hay notas para esta cita, agrega una!')\n            activeCita.current = cita._id\n        }\n        setStringEstado(getEstadoString(estado))\n    }, [cita, estado])\n    \n\n    const getEstadoString = (estado) => \n        estado === 'CANCELADA' ? 'Cancelada' : \n        estado === 'AGENDADA' ? 'Agendada' : \n        estado === 'PENDIENTE' ? 'Pendiente' : \n        estado === 'COMPLETADA' ? 'Completada' : ''\n    \n\n    return [ editNote, handleEditClick, nota, handleInputChange, stringEstado, estado, newFecha ]\n\n}"]},"metadata":{},"sourceType":"module"}