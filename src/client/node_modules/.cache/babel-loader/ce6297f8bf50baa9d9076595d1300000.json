{"ast":null,"code":"import _objectSpread from\"/home/marceliux/Development/BoilerLog/NodeTask/src/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/home/marceliux/Development/BoilerLog/NodeTask/src/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/home/marceliux/Development/BoilerLog/NodeTask/src/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/marceliux/Development/BoilerLog/NodeTask/src/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{fetchDeleteArchivo,fetchDownloadArchivo,fetchGetArchivosDePacientes,fetchGetCitasDePacientes,fetchGetPacientes,fetchPostFiles,fetchPostPaciente,fetchPutPacientes,fetchSearchPaciente}from'../services/fetch';import{types}from'../types/types';import{startLoadingCitas}from'./citas';import{setModalInactivo,setToastActivo}from'./ui';export var startSearchingPaciente=function startSearchingPaciente(searchString){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var token,resp,body;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:token=localStorage.getItem('token');_context.next=3;return fetchSearchPaciente(token,searchString);case 3:resp=_context.sent;_context.next=6;return resp.json();case 6:body=_context.sent;if(body===null||body===void 0?void 0:body.ok){dispatch(setToastActivo(body.msg));dispatch(setPacientes(body.pacientes));}case 8:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var startAddingPaciente=function startAddingPaciente(paciente){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch,getState){var totalPacientes,token,resp,body;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:totalPacientes=getState().pacientes.totalPacientes;token=localStorage.getItem('token');_context2.next=4;return fetchPostPaciente(token,paciente);case 4:resp=_context2.sent;_context2.next=7;return resp.json();case 7:body=_context2.sent;console.log(totalPacientes);if(body===null||body===void 0?void 0:body.ok){dispatch(setToastActivo(body.msg));dispatch(refreshPaciente(body.createdUser));dispatch(setPacientes([].concat(_toConsumableArray(totalPacientes),[body.createdUser])));dispatch(removePacienteActivo());dispatch(setModalInactivo());dispatch(startLoadingCitas());}case 10:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2,_x3){return _ref2.apply(this,arguments);};}();};export var clearPacientes=function clearPacientes(){return{type:types.pacienteClearPacientes};};export var setCitasPaciente=function setCitasPaciente(citas){return{type:types.pacienteSetCitasPaciente,payload:citas};};export var setArchivosPaciente=function setArchivosPaciente(archivos){return{type:types.pacienteSetArchivosPaciente,payload:archivos};};export var startLoadingCitasPaciente=function startLoadingCitasPaciente(_id){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var token,response,_yield$response$json,ok,citas;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:token=localStorage.getItem('token');_context3.next=3;return fetchGetCitasDePacientes(token,_id);case 3:response=_context3.sent;_context3.next=6;return response.json();case 6:_yield$response$json=_context3.sent;ok=_yield$response$json.ok;citas=_yield$response$json.citas;if(ok){dispatch(setCitasPaciente(citas));}case 10:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x4){return _ref3.apply(this,arguments);};}();};export var startLoadingArchivosPaciente=function startLoadingArchivosPaciente(_id){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var token,response,_yield$response$json2,ok,archivos;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:token=localStorage.getItem('token');_context4.next=3;return fetchGetArchivosDePacientes(_id,token);case 3:response=_context4.sent;_context4.next=6;return response.json();case 6:_yield$response$json2=_context4.sent;ok=_yield$response$json2.ok;archivos=_yield$response$json2.archivos;if(ok){dispatch(setArchivosPaciente(archivos));}case 10:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x5){return _ref4.apply(this,arguments);};}();};var refreshPaciente=function refreshPaciente(paciente){return{type:types.pacientesActualizarPacientes,payload:paciente};};export var startLoadingPacientes=function startLoadingPacientes(){return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch){var token,response,_yield$response$json3,pacientes;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:token=localStorage.getItem('token');_context5.next=3;return fetchGetPacientes(token);case 3:response=_context5.sent;_context5.next=6;return response.json();case 6:_yield$response$json3=_context5.sent;pacientes=_yield$response$json3.pacientes;pacientes.length>0?dispatch(setPacientes(pacientes)):dispatch(setPacientes([]));case 9:case\"end\":return _context5.stop();}}},_callee5);}));return function(_x6){return _ref5.apply(this,arguments);};}();};var setPacientes=function setPacientes(pacientes){return{type:types.pacientesSetPacientes,payload:{pacientes:_toConsumableArray(pacientes)}};};export var startUpdatePaciente=function startUpdatePaciente(paciente){return/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch,getState){var totalPacientes,token,resp,body;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:totalPacientes=getState().pacientes.totalPacientes;totalPacientes=totalPacientes.map(function(v){return v._id===paciente._id?paciente:v;});token=localStorage.getItem('token');_context6.next=5;return fetchPutPacientes(token,paciente);case 5:resp=_context6.sent;_context6.next=8;return resp.json();case 8:body=_context6.sent;if(body===null||body===void 0?void 0:body.ok){dispatch(setToastActivo(body.msg));dispatch(refreshPaciente(paciente));dispatch(setPacientes(totalPacientes));}case 10:case\"end\":return _context6.stop();}}},_callee6);}));return function(_x7,_x8){return _ref6.apply(this,arguments);};}();};export var setPacienteActivo=function setPacienteActivo(paciente){return{type:types.pacienteSetPacienteActivo,payload:_objectSpread({},paciente)};};export var removePacienteActivo=function removePacienteActivo(){return{type:types.pacienteRemovePacienteActivo};};export var startUploadingFile=function startUploadingFile(file,id){return/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(dispatch,getState){var archivosPorPaciente,token,data,resp,_yield$resp$json,ok,msg,archivo;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:archivosPorPaciente=getState().pacientes.archivosPorPaciente;token=localStorage.getItem('token');data=new FormData();data.append('file',file);_context7.next=6;return fetchPostFiles(id,data,token);case 6:resp=_context7.sent;_context7.next=9;return resp.json();case 9:_yield$resp$json=_context7.sent;ok=_yield$resp$json.ok;msg=_yield$resp$json.msg;archivo=_yield$resp$json.archivo;console.log(ok);console.log(archivosPorPaciente);if(ok){dispatch(setArchivosPaciente([].concat(_toConsumableArray(archivosPorPaciente),[archivo])));dispatch(setToastActivo(msg));}case 16:case\"end\":return _context7.stop();}}},_callee7);}));return function(_x9,_x10){return _ref7.apply(this,arguments);};}();};export var startDeletingFile=function startDeletingFile(fileId,fileName,pacienteId){return/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(dispatch,getState){var archivosPorPaciente,token,resp,body;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:archivosPorPaciente=getState().pacientes.archivosPorPaciente;archivosPorPaciente=archivosPorPaciente.filter(function(v){return v._id!==fileId;});token=localStorage.getItem('token');_context8.next=5;return fetchDeleteArchivo(pacienteId,fileName,token);case 5:resp=_context8.sent;_context8.next=8;return resp.json();case 8:body=_context8.sent;console.log(archivosPorPaciente);if(body===null||body===void 0?void 0:body.ok){dispatch(setToastActivo(body.msg));dispatch(setArchivosPaciente(archivosPorPaciente));}case 11:case\"end\":return _context8.stop();}}},_callee8);}));return function(_x11,_x12){return _ref8.apply(this,arguments);};}();};export var startDownloadingFile=function startDownloadingFile(fileName,pacienteId){return/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee9(dispatch){var token,resp,blob,url,a;return _regeneratorRuntime.wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:token=localStorage.getItem('token');_context9.next=3;return fetchDownloadArchivo(pacienteId,fileName,token);case 3:resp=_context9.sent;console.log(resp.body);_context9.next=7;return resp.blob();case 7:blob=_context9.sent;console.log(blob);console.log(\"estoy llegando aca\");url=window.URL.createObjectURL(blob);a=document.createElement('a');a.href=url;a.download=fileName;a.click();case 15:case\"end\":return _context9.stop();}}},_callee9);}));return function(_x13){return _ref9.apply(this,arguments);};}();};","map":{"version":3,"sources":["/home/marceliux/Development/BoilerLog/NodeTask/src/client/src/actions/pacientes.js"],"names":["fetchDeleteArchivo","fetchDownloadArchivo","fetchGetArchivosDePacientes","fetchGetCitasDePacientes","fetchGetPacientes","fetchPostFiles","fetchPostPaciente","fetchPutPacientes","fetchSearchPaciente","types","startLoadingCitas","setModalInactivo","setToastActivo","startSearchingPaciente","searchString","dispatch","token","localStorage","getItem","resp","json","body","ok","msg","setPacientes","pacientes","startAddingPaciente","paciente","getState","totalPacientes","console","log","refreshPaciente","createdUser","removePacienteActivo","clearPacientes","type","pacienteClearPacientes","setCitasPaciente","citas","pacienteSetCitasPaciente","payload","setArchivosPaciente","archivos","pacienteSetArchivosPaciente","startLoadingCitasPaciente","_id","response","startLoadingArchivosPaciente","pacientesActualizarPacientes","startLoadingPacientes","length","pacientesSetPacientes","startUpdatePaciente","map","v","setPacienteActivo","pacienteSetPacienteActivo","pacienteRemovePacienteActivo","startUploadingFile","file","id","archivosPorPaciente","data","FormData","append","archivo","startDeletingFile","fileId","fileName","pacienteId","filter","startDownloadingFile","blob","url","window","URL","createObjectURL","a","document","createElement","href","download","click"],"mappings":"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","sourcesContent":["import { fetchDeleteArchivo, fetchDownloadArchivo, fetchGetArchivosDePacientes, fetchGetCitasDePacientes, fetchGetPacientes, fetchPostFiles, fetchPostPaciente, fetchPutPacientes, fetchSearchPaciente } from '../services/fetch'\nimport {types} from '../types/types'\nimport { startLoadingCitas } from './citas'\nimport { setModalInactivo, setToastActivo } from './ui'\n\nexport const startSearchingPaciente = (searchString) => {\n    return async (dispatch) => {\n\n        const token = localStorage.getItem('token')\n        const resp = await fetchSearchPaciente(token, searchString)\n        const body = await resp.json()\n        \n        if(body?.ok){\n            dispatch(setToastActivo(body.msg))\n            dispatch(setPacientes(body.pacientes))\n        }\n        \n    }\n}\n\nexport const startAddingPaciente = (paciente) => {\n    return async (dispatch, getState) => {\n        const {totalPacientes} = getState().pacientes\n        const token = localStorage.getItem('token')\n        const resp = await fetchPostPaciente(token, paciente)\n        const body = await resp.json()\n\n        console.log(totalPacientes)\n\n        if(body?.ok){\n            dispatch(setToastActivo(body.msg))\n            dispatch(refreshPaciente(body.createdUser))\n            dispatch(setPacientes([...totalPacientes, body.createdUser]))\n            dispatch(removePacienteActivo())\n            dispatch(setModalInactivo())\n            dispatch(startLoadingCitas())\n        }\n        \n    }\n}\n\nexport const clearPacientes = () => ({type: types.pacienteClearPacientes})\n\nexport const setCitasPaciente = (citas) => ({\n    type: types.pacienteSetCitasPaciente,\n    payload: citas\n})\n\nexport const setArchivosPaciente = (archivos) => ({\n    type: types.pacienteSetArchivosPaciente,\n    payload: archivos\n})\n\nexport const startLoadingCitasPaciente = (_id) => {\n    return async (dispatch) => {\n        const token = localStorage.getItem('token')\n        const response = await fetchGetCitasDePacientes(token, _id)\n        const {ok, citas} = await response.json()\n        if(ok){\n            dispatch(setCitasPaciente(citas))\n        }\n    }\n}\n\nexport const startLoadingArchivosPaciente = (_id) => {\n    return async (dispatch) => {\n        const token = localStorage.getItem('token')\n        const response = await fetchGetArchivosDePacientes(_id, token)\n        const {ok, archivos} = await response.json()\n\n        if(ok){\n            dispatch(setArchivosPaciente(archivos))\n        }\n    }\n}\n\nconst refreshPaciente = (paciente) => ({\n    type: types.pacientesActualizarPacientes,\n    payload: paciente\n})\n\nexport const startLoadingPacientes = () =>{\n    return async dispatch => {\n        const token = localStorage.getItem('token')\n\n        const response = await fetchGetPacientes(token)\n        const {pacientes} = await response.json()\n\n        pacientes.length > 0 ? dispatch(setPacientes(pacientes)) : dispatch(setPacientes([]))\n    }\n}\n\nconst setPacientes = (pacientes) => ({\n    type: types.pacientesSetPacientes,\n    payload:{\n        pacientes: [...pacientes]\n    }\n})\n\nexport const startUpdatePaciente = (paciente) => {\n    return async (dispatch, getState) => {\n\n        let {totalPacientes} = getState().pacientes\n\n        totalPacientes = totalPacientes.map(\n            v => v._id === paciente._id\n            ? paciente\n            : v\n        )\n\n        const token = localStorage.getItem('token')\n        const resp = await fetchPutPacientes(token, paciente)\n        const body = await resp.json()\n\n        if(body?.ok){\n            dispatch(setToastActivo(body.msg))\n            dispatch(refreshPaciente(paciente))\n            dispatch(setPacientes(totalPacientes))\n        }\n        \n    }\n}\n\nexport const setPacienteActivo = (paciente) => ({\n    type: types.pacienteSetPacienteActivo,\n    payload: {...paciente}\n})\n\nexport const removePacienteActivo = () => ({type: types.pacienteRemovePacienteActivo})\n\nexport const startUploadingFile = (file, id) => {\n    return async (dispatch, getState) => {\n\n        const {archivosPorPaciente} = getState().pacientes\n\n        const token = localStorage.getItem('token')\n        const data = new FormData()\n        data.append('file', file)\n\n        const resp = await fetchPostFiles(id, data, token)\n        const {ok, msg, archivo} = await resp.json()\n        console.log(ok)\n        console.log(archivosPorPaciente)\n        if(ok){\n            dispatch(setArchivosPaciente([...archivosPorPaciente, archivo]))\n            dispatch(setToastActivo(msg))\n        }\n    }\n}\n\n\nexport const startDeletingFile = (fileId, fileName,  pacienteId) => {\n    return async (dispatch, getState) => {\n\n        let {archivosPorPaciente} = getState().pacientes\n\n        archivosPorPaciente = archivosPorPaciente.filter(v => v._id !== fileId)\n\n        const token = localStorage.getItem('token')\n        const resp = await fetchDeleteArchivo(pacienteId, fileName, token)\n        const body = await resp.json()\n\n        console.log(archivosPorPaciente)\n\n        if(body?.ok){\n            dispatch(setToastActivo(body.msg))\n            dispatch(setArchivosPaciente(archivosPorPaciente))\n        }\n    }\n}\n\nexport const startDownloadingFile = (fileName,  pacienteId) => {\n    return async (dispatch) => {\n\n        const token = localStorage.getItem('token')\n        const resp = await fetchDownloadArchivo(pacienteId, fileName, token)\n        console.log(resp.body)\n        const blob = await resp.blob()\n\n        console.log(blob)\n        console.log(`estoy llegando aca`)\n\n        let url = window.URL.createObjectURL(blob)\n        let a = document.createElement('a')\n        a.href = url\n        a.download = fileName\n        a.click()\n\n    }\n}"]},"metadata":{},"sourceType":"module"}