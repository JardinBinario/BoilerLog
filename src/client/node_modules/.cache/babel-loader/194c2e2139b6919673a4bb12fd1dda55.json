{"ast":null,"code":"import { types } from '../types/types';\nconst initialState = {\n  isCitaActive: false,\n  cita: {},\n  totalCitas: []\n};\nexport const citasReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.citasSetCitaActiva:\n      return { ...state,\n        cita: action.payload,\n        isCitaActive: true\n      };\n\n    case types.citasRemoveCitaActiva:\n      return { ...state,\n        cita: {},\n        isCitaActive: false\n      };\n\n    case types.citasUpdateCitaActiva:\n      return { ...state,\n        cita: action.payload\n      };\n\n    case types.citasSetCitas:\n      return { ...state,\n        totalCitas: action.payload.citas\n      };\n\n    case types.citasLimpiarCitas:\n      {\n        return {\n          isCitaActive: false,\n          cita: {},\n          totalCitas: []\n        };\n      }\n\n    case types.citasCancelarCita:\n      {\n        return { ...state,\n          isCitaActive: false,\n          cita: {}\n        };\n      }\n\n    case types.citasActualizarCitas:\n      {\n        return { ...state,\n          totalCitas: state.totalCitas.map(cita => cita._id === action.payload._id ? action.payload : cita)\n        };\n      }\n\n    case types.citasAgregarCita:\n      {\n        return { ...state,\n          totalCitas: [...state.totalCitas, action.payload]\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/marceliux/Development/BoilerLog/NodeTask/src/client/src/reducers/citasReducer.js"],"names":["types","initialState","isCitaActive","cita","totalCitas","citasReducer","state","action","type","citasSetCitaActiva","payload","citasRemoveCitaActiva","citasUpdateCitaActiva","citasSetCitas","citas","citasLimpiarCitas","citasCancelarCita","citasActualizarCitas","map","_id","citasAgregarCita"],"mappings":"AAAA,SAAQA,KAAR,QAAoB,gBAApB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE,KADG;AAEjBC,EAAAA,IAAI,EAAE,EAFW;AAGjBC,EAAAA,UAAU,EAAE;AAHK,CAArB;AAMA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAACL,YAAP,EAAqBM,MAArB,KAA+B;AACvD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,KAAK,CAACS,kBAAX;AACI,aAAO,EACH,GAAGH,KADA;AAEHH,QAAAA,IAAI,EAAEI,MAAM,CAACG,OAFV;AAGHR,QAAAA,YAAY,EAAE;AAHX,OAAP;;AAMJ,SAAKF,KAAK,CAACW,qBAAX;AACI,aAAO,EACH,GAAGL,KADA;AAEHH,QAAAA,IAAI,EAAE,EAFH;AAGHD,QAAAA,YAAY,EAAE;AAHX,OAAP;;AAMJ,SAAKF,KAAK,CAACY,qBAAX;AACI,aAAO,EACH,GAAGN,KADA;AAEHH,QAAAA,IAAI,EAAEI,MAAM,CAACG;AAFV,OAAP;;AAKJ,SAAKV,KAAK,CAACa,aAAX;AACI,aAAO,EACH,GAAGP,KADA;AAEHF,QAAAA,UAAU,EAAEG,MAAM,CAACG,OAAP,CAAeI;AAFxB,OAAP;;AAKJ,SAAKd,KAAK,CAACe,iBAAX;AAA6B;AACzB,eAAO;AACHb,UAAAA,YAAY,EAAE,KADX;AAEHC,UAAAA,IAAI,EAAE,EAFH;AAGHC,UAAAA,UAAU,EAAE;AAHT,SAAP;AAKH;;AAED,SAAKJ,KAAK,CAACgB,iBAAX;AAA6B;AACzB,eAAO,EACH,GAAGV,KADA;AAEHJ,UAAAA,YAAY,EAAE,KAFX;AAGHC,UAAAA,IAAI,EAAE;AAHH,SAAP;AAKH;;AAGD,SAAKH,KAAK,CAACiB,oBAAX;AAAgC;AAC5B,eAAO,EACH,GAAGX,KADA;AAEHF,UAAAA,UAAU,EAAEE,KAAK,CAACF,UAAN,CAAiBc,GAAjB,CACRf,IAAI,IAAIA,IAAI,CAACgB,GAAL,KAAaZ,MAAM,CAACG,OAAP,CAAeS,GAA5B,GACNZ,MAAM,CAACG,OADD,GAENP,IAHM;AAFT,SAAP;AAQH;;AAED,SAAKH,KAAK,CAACoB,gBAAX;AAA4B;AACxB,eAAO,EACH,GAAGd,KADA;AAEHF,UAAAA,UAAU,EAAE,CAAC,GAAGE,KAAK,CAACF,UAAV,EAAsBG,MAAM,CAACG,OAA7B;AAFT,SAAP;AAIH;;AAED;AACI,aAAOJ,KAAP;AA/DR;AAiEH,CAlEM","sourcesContent":["import {types} from '../types/types'\n\nconst initialState = {\n    isCitaActive: false,\n    cita: {},\n    totalCitas: [],\n}\n\nexport const citasReducer = (state=initialState, action) =>{\n    switch (action.type) {\n        case types.citasSetCitaActiva:\n            return {\n                ...state,\n                cita: action.payload,\n                isCitaActive: true\n            }\n\n        case types.citasRemoveCitaActiva:\n            return {\n                ...state,\n                cita: {},\n                isCitaActive: false\n            }\n        \n        case types.citasUpdateCitaActiva:\n            return {\n                ...state,\n                cita: action.payload,\n            }\n        \n        case types.citasSetCitas:\n            return {\n                ...state,\n                totalCitas: action.payload.citas\n            }\n            \n        case types.citasLimpiarCitas:{\n            return {\n                isCitaActive: false,\n                cita: {},\n                totalCitas: []\n            }\n        }\n\n        case types.citasCancelarCita:{\n            return {\n                ...state,\n                isCitaActive: false,\n                cita: {},\n            }\n        }\n\n\n        case types.citasActualizarCitas:{\n            return {\n                ...state,\n                totalCitas: state.totalCitas.map(\n                    cita => cita._id === action.payload._id\n                    ? action.payload\n                    : cita\n                )\n            }\n        }\n\n        case types.citasAgregarCita:{\n            return {\n                ...state,\n                totalCitas: [...state.totalCitas, action.payload]\n            }\n        }\n        \n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}