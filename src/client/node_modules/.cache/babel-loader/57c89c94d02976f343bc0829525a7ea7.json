{"ast":null,"code":"var _jsxFileName = \"/home/marceliux/Development/BoilerLog/NodeTask/src/client/src/components/screens/HomeScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLoadingCitas } from '../../actions/citas';\nimport { Dashboard } from '../ui/home/Dashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HomeScreen = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    totalCitas\n  } = useSelector(state => state.citas);\n  useEffect(() => dispatch(startLoadingCitas()), [dispatch]);\n  const todayObj = new Date();\n  const todayDate = todayObj.getDate();\n  const todayDay = todayObj.getDay();\n  const firstDayOfWeek = new Date(todayObj.setDate(todayDate - todayDay + 1));\n  const lastDayOfWeek = new Date(firstDayOfWeek);\n  lastDayOfWeek.setDate(lastDayOfWeek.getDate() + 5);\n  const citasEstaSemana = totalCitas.filter(cita => new Date(cita.fechaDeseada) >= firstDayOfWeek && new Date(cita.fechaDeseada) <= lastDayOfWeek && cita.estado === 'AGENDADA' && cita);\n  const citasSinConfirmar = totalCitas.filter(cita => new Date(cita.fechaDeseada) >= firstDayOfWeek && new Date(cita.fechaDeseada) <= lastDayOfWeek && cita.estado === 'PENDIENTE');\n  const citasCanceladas = totalCitas.filter(cita => new Date(cita.fechaDeseada) >= firstDayOfWeek && new Date(cita.fechaDeseada) <= lastDayOfWeek && cita.estado === 'CANCELADA');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '1.5rem',\n        marginBottom: '-3rem',\n        fontWeight: '500'\n      },\n      children: \"Informaci\\xF3n importante: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-home\",\n      children: [/*#__PURE__*/_jsxDEV(Dashboard, {\n        data: citasEstaSemana,\n        heading: \"Citas agendadas\",\n        time: \"esta semana\",\n        text: \"Abajo puedes encontrar la fecha y el paciente de las citas actualmente agendadas. Si ves un bot\\xF3n de completar quiere decir que la fecha h\\xE1bil de esta cita ya pas\\xF3, compl\\xE9tala.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dashboard, {\n        data: citasSinConfirmar,\n        heading: \"Citas sin confirmar\",\n        time: \"esta semana\",\n        text: \"Abajo vas a encontrar los pacientes que crearon una cita en la p\\xE1gina web, pero no han confirmado el horario, puedes ir al m\\xF3dulo de Pacientes y contactar al paciente para confirmar su cita.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dashboard, {\n        data: citasCanceladas,\n        heading: \"Citas canceladas\",\n        time: \"esta semana\",\n        text: \"Abajo vas a encontrar las citas que fueron canceladas esta semana, puedes contactar al paciente y/o doctor para reagendar de ser necesario.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HomeScreen, \"5Y59Tv73ylHJXSDKnvohW9geZmE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = HomeScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"sources":["/home/marceliux/Development/BoilerLog/NodeTask/src/client/src/components/screens/HomeScreen.jsx"],"names":["React","useEffect","useDispatch","useSelector","startLoadingCitas","Dashboard","HomeScreen","dispatch","totalCitas","state","citas","todayObj","Date","todayDate","getDate","todayDay","getDay","firstDayOfWeek","setDate","lastDayOfWeek","citasEstaSemana","filter","cita","fechaDeseada","estado","citasSinConfirmar","citasCanceladas","textAlign","marginTop","marginBottom","fontWeight"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLoadingCitas } from '../../actions/citas';\nimport { Dashboard } from '../ui/home/Dashboard'\n\nexport const HomeScreen = () => {\n\n    const dispatch = useDispatch()\n\n    const {totalCitas} = useSelector(state => state.citas)\n\n    useEffect(() => dispatch(startLoadingCitas()), [dispatch])\n\n    \n    const todayObj = new Date();\n    const todayDate = todayObj.getDate();\n    const todayDay = todayObj.getDay();\n    \n    const firstDayOfWeek = new Date(todayObj.setDate(todayDate - todayDay + 1 ));\n    const lastDayOfWeek = new Date(firstDayOfWeek);\n    lastDayOfWeek.setDate(lastDayOfWeek.getDate() + 5);\n\n\n    const citasEstaSemana = totalCitas.filter(cita => new Date(cita.fechaDeseada) >= firstDayOfWeek && new Date(cita.fechaDeseada) <= lastDayOfWeek && cita.estado === 'AGENDADA' && cita)\n    const citasSinConfirmar = totalCitas.filter( cita =>  new Date(cita.fechaDeseada) >= firstDayOfWeek && new Date(cita.fechaDeseada) <= lastDayOfWeek && cita.estado === 'PENDIENTE')\n    const citasCanceladas = totalCitas.filter( cita =>  new Date(cita.fechaDeseada) >= firstDayOfWeek && new Date(cita.fechaDeseada) <= lastDayOfWeek && cita.estado === 'CANCELADA')\n\n\n    return (\n        <div className=\"main-container\">\n            <h1 style={{textAlign: 'center', marginTop: '1.5rem', marginBottom: '-3rem', fontWeight: '500'}}>Información importante: </h1>\n            <div className=\"dashboard-home\">\n                <Dashboard data={citasEstaSemana} heading=\"Citas agendadas\" time=\"esta semana\" text=\"Abajo puedes encontrar la fecha y el paciente de las citas actualmente agendadas. Si ves un botón de completar quiere decir que la fecha hábil de esta cita ya pasó, complétala.\" />\n                <Dashboard data={citasSinConfirmar} heading=\"Citas sin confirmar\" time=\"esta semana\" text=\"Abajo vas a encontrar los pacientes que crearon una cita en la página web, pero no han confirmado el horario, puedes ir al módulo de Pacientes y contactar al paciente para confirmar su cita.\"/>\n                <Dashboard data={citasCanceladas} heading=\"Citas canceladas\" time=\"esta semana\" text=\"Abajo vas a encontrar las citas que fueron canceladas esta semana, puedes contactar al paciente y/o doctor para reagendar de ser necesario.\"/>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}