{"ast":null,"code":"import _defineProperty from\"/home/marceliux/Development/BoilerLog/NodeTask/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/marceliux/Development/BoilerLog/NodeTask/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/marceliux/Development/BoilerLog/NodeTask/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';export var useForm=function useForm(){var initialState=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var validate=arguments.length>1?arguments[1]:undefined;var callback=arguments.length>2?arguments[2]:undefined;var _useState=useState(initialState),_useState2=_slicedToArray(_useState,2),values=_useState2[0],setValues=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),errors=_useState4[0],setErrors=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isSubmitting=_useState6[0],setIsSubmitting=_useState6[1];useEffect(function(){if(Object.keys(errors).length===0&&isSubmitting){callback();setIsSubmitting(false);}},[errors,callback,isSubmitting]);var handleSubmit=function handleSubmit(e){e&&e.preventDefault();setErrors(validate(values));setIsSubmitting(true);};var reset=function reset(){var newState=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;setValues(newState);};var handleInputChange=function handleInputChange(_ref){var target=_ref.target;setValues(_objectSpread(_objectSpread({},values),{},_defineProperty({},target.name,target.value)));};return[values,handleInputChange,handleSubmit,errors,reset];};","map":{"version":3,"sources":["/home/marceliux/Development/BoilerLog/NodeTask/client/src/components/hooks/useForm.js"],"names":["useState","useEffect","useForm","initialState","validate","callback","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","Object","keys","length","handleSubmit","e","preventDefault","reset","newState","handleInputChange","target","name","value"],"mappings":"qgBAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAEA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAA6C,IAA3CC,CAAAA,YAA2C,2DAA5B,EAA4B,IAAxBC,CAAAA,QAAwB,8CAAdC,CAAAA,QAAc,yDAEpCL,QAAQ,CAACG,YAAD,CAF4B,wCAEzDG,MAFyD,eAEjDC,SAFiD,8BAGpCP,QAAQ,CAAC,EAAD,CAH4B,yCAGzDQ,MAHyD,eAGjDC,SAHiD,8BAIxBT,QAAQ,CAAC,KAAD,CAJgB,yCAIzDU,YAJyD,eAI3CC,eAJ2C,eAOhEV,SAAS,CAAC,UAAM,CACZ,GAAGW,MAAM,CAACC,IAAP,CAAYL,MAAZ,EAAoBM,MAApB,GAA+B,CAA/B,EAAoCJ,YAAvC,CAAoD,CAChDL,QAAQ,GACRM,eAAe,CAAC,KAAD,CAAf,CACH,CAEJ,CANQ,CAOP,CAACH,MAAD,CAASH,QAAT,CAAmBK,YAAnB,CAPO,CAAT,CASA,GAAMK,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CACxBA,CAAC,EAAIA,CAAC,CAACC,cAAF,EAAL,CACAR,SAAS,CAACL,QAAQ,CAACE,MAAD,CAAT,CAAT,CACAK,eAAe,CAAC,IAAD,CAAf,CACH,CAJD,CAMA,GAAMO,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAA6B,IAA5BC,CAAAA,QAA4B,2DAAjBhB,YAAiB,CACvCI,SAAS,CAACY,QAAD,CAAT,CACH,CAFD,CAIA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,MAAgB,IAAbC,CAAAA,MAAa,MAAbA,MAAa,CACtCd,SAAS,gCACFD,MADE,wBAEHe,MAAM,CAACC,IAFJ,CAEYD,MAAM,CAACE,KAFnB,GAAT,CAIH,CALD,CAOA,MAAO,CAAEjB,MAAF,CAAUc,iBAAV,CAA6BL,YAA7B,CAA2CP,MAA3C,CAAmDU,KAAnD,CAAP,CAEH,CAnCM","sourcesContent":["import { useState, useEffect } from 'react'\n\nexport const useForm = ( initialState = {}, validate, callback ) => {\n\n    const [values, setValues] = useState(initialState)\n    const [errors, setErrors] = useState({})\n    const [isSubmitting, setIsSubmitting] = useState(false)\n\n\n    useEffect(() => {\n        if(Object.keys(errors).length === 0 && isSubmitting){\n            callback()\n            setIsSubmitting(false)\n        }\n\n    }    \n    , [errors, callback, isSubmitting])    \n\n    const handleSubmit = (e) => {\n        e && e.preventDefault()\n        setErrors(validate(values))\n        setIsSubmitting(true)\n    }\n\n    const reset = (newState = initialState) => {\n        setValues(newState)\n    }\n\n    const handleInputChange = ({ target }) => {\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        })\n    }\n\n    return [ values, handleInputChange, handleSubmit, errors, reset]\n\n}"]},"metadata":{},"sourceType":"module"}