{"ast":null,"code":"var _jsxFileName = \"/home/marceliux/Development/BoilerLog/NodeTask/src/client/src/components/ui/InputGroup.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { startSearchingPaciente } from '../../actions/pacientes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InputGroup = ({\n  isEdit,\n  search,\n  value,\n  label,\n  handleInputChange,\n  name\n}) => {\n  _s();\n\n  const [disabled, setDisabled] = useState(false);\n  const [searchString, setSearchString] = useState('');\n\n  const handleSearchString = ({\n    target\n  }) => setSearchString(target.value);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    isEdit && setDisabled(true);\n  }, [isEdit]);\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  }, [disabled]);\n\n  const handleDisable = e => {\n    e.preventDefault();\n\n    if (search && !disabled) {\n      dispatch(startSearchingPaciente(searchString));\n    }\n\n    setDisabled(!disabled);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `input-group ${search && 'mt-10'}`,\n    children: [!search && /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: name,\n      children: [label, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group__main\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: `${search ? 'search' : ''}`,\n        placeholder: search && 'Buscar...',\n        autoComplete: \"off\",\n        name: name,\n        ref: inputRef,\n        disabled: disabled,\n        type: \"text\",\n        value: value,\n        onChange: search ? e => handleSearchString(e) : handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"input-group_button\",\n        onClick: e => handleDisable(e),\n        children: search ? /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 31\n        }, this) : disabled ? 'Editar' : 'Guardar'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InputGroup, \"f99spzebdTe5xRQtPoJlYNPYzY0=\", false, function () {\n  return [useDispatch];\n});\n\n_c = InputGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputGroup\");","map":{"version":3,"sources":["/home/marceliux/Development/BoilerLog/NodeTask/src/client/src/components/ui/InputGroup.jsx"],"names":["React","useEffect","useRef","useState","useDispatch","startSearchingPaciente","InputGroup","isEdit","search","value","label","handleInputChange","name","disabled","setDisabled","searchString","setSearchString","handleSearchString","target","dispatch","inputRef","current","focus","handleDisable","e","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,sBAAT,QAAuC,yBAAvC;;AAEA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA,MAAT;AAAiBC,EAAAA,KAAjB;AAAwBC,EAAAA,KAAxB;AAA+BC,EAAAA,iBAA/B;AAAkDC,EAAAA;AAAlD,CAAD,KAA6D;AAAA;;AAEnF,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMc,kBAAkB,GAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAcF,eAAe,CAAEE,MAAM,CAACT,KAAT,CAAxD;;AAEA,QAAMU,QAAQ,GAAGf,WAAW,EAA5B;AAEAH,EAAAA,SAAS,CAAC,MAAI;AACVM,IAAAA,MAAM,IAAIO,WAAW,CAAC,IAAD,CAArB;AACH,GAFQ,EAEN,CAACP,MAAD,CAFM,CAAT;AAIA,QAAMa,QAAQ,GAAElB,MAAM,CAAC,IAAD,CAAtB;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACVmB,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;AACH,GAFQ,EAEN,CAACT,QAAD,CAFM,CAAT;;AAIA,QAAMU,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAGjB,MAAM,IAAI,CAACK,QAAd,EAAwB;AACpBM,MAAAA,QAAQ,CAACd,sBAAsB,CAACU,YAAD,CAAvB,CAAR;AACH;;AACDD,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACH,GAND;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAG,eAAcL,MAAM,IAAI,OAAQ,EAAjD;AAAA,eACK,CAACA,MAAD,iBAAW;AAAO,MAAA,OAAO,EAAEI,IAAhB;AAAA,iBAAuBF,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,YADhB,eAEI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACI;AACI,QAAA,SAAS,EAAG,GAAEF,MAAM,GAAG,QAAH,GAAc,EAAG,EADzC;AAEI,QAAA,WAAW,EAAEA,MAAM,IAAI,WAF3B;AAGI,QAAA,YAAY,EAAC,KAHjB;AAII,QAAA,IAAI,EAAEI,IAJV;AAKI,QAAA,GAAG,EAAEQ,QALT;AAMI,QAAA,QAAQ,EAAEP,QANd;AAOI,QAAA,IAAI,EAAC,MAPT;AAQI,QAAA,KAAK,EAAEJ,KARX;AASI,QAAA,QAAQ,EAAGD,MAAM,GAAGgB,CAAC,IAAIP,kBAAkB,CAACO,CAAD,CAA1B,GAAgCb;AATrD;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI;AAAQ,QAAA,SAAS,EAAC,oBAAlB;AAAuC,QAAA,OAAO,EAAGa,CAAD,IAAMD,aAAa,CAACC,CAAD,CAAnE;AAAA,kBAEQhB,MAAM,gBACA;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADA,GAEAK,QAAQ,GACJ,QADI,GAEJ;AANlB;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CAvDM;;GAAMP,U;UAQQF,W;;;KARRE,U","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { startSearchingPaciente } from '../../actions/pacientes'\n\nexport const InputGroup = ({isEdit, search, value, label, handleInputChange, name}) => {\n\n    const [disabled, setDisabled] = useState(false)\n\n    const [searchString, setSearchString] = useState('')\n\n    const handleSearchString = ({target}) => setSearchString (target.value)\n\n    const dispatch = useDispatch()\n\n    useEffect(()=>{\n        isEdit && setDisabled(true)\n    }, [isEdit])\n\n    const inputRef= useRef(null)\n\n    useEffect(()=>{\n        inputRef.current.focus()\n    }, [disabled])\n\n    const handleDisable = (e) => {\n        e.preventDefault()\n        if(search && !disabled) {\n            dispatch(startSearchingPaciente(searchString))\n        }\n        setDisabled(!disabled)\n    }\n\n    return (\n        <div className={`input-group ${search && 'mt-10'}`}>\n            {!search && <label htmlFor={name}>{label}:</label>}\n            <div className=\"input-group__main\">\n                <input \n                    className={`${search ? 'search' : ''}`}\n                    placeholder={search && 'Buscar...'}\n                    autoComplete=\"off\"\n                    name={name}\n                    ref={inputRef} \n                    disabled={disabled} \n                    type=\"text\"\n                    value={value} \n                    onChange={ search ? e => handleSearchString(e) : handleInputChange}    \n                />\n                <button className=\"input-group_button\" onClick={(e)=> handleDisable(e)}>\n                    {\n                        search \n                            ? <i className=\"fas fa-search\"></i>\n                            : disabled \n                                ? 'Editar' \n                                : 'Guardar'\n                    }\n                </button>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}