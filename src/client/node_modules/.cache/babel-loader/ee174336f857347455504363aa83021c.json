{"ast":null,"code":"import _toConsumableArray from\"/home/marceliux/Development/BoilerLog/NodeTask/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/marceliux/Development/BoilerLog/NodeTask/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{types}from'../types/types';var initialState={isCitaActive:false,cita:{},totalCitas:[]};export var citasReducer=function citasReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case types.citasSetCitaActiva:return _objectSpread(_objectSpread({},state),{},{cita:action.payload,isCitaActive:true});case types.citasRemoveCitaActiva:return _objectSpread(_objectSpread({},state),{},{cita:{},isCitaActive:false});case types.citasUpdateCitaActiva:return _objectSpread(_objectSpread({},state),{},{cita:action.payload});case types.citasSetCitas:return _objectSpread(_objectSpread({},state),{},{totalCitas:action.payload.citas});case types.citasLimpiarCitas:{return{isCitaActive:false,cita:{},totalCitas:[]};}case types.citasCancelarCita:{return _objectSpread(_objectSpread({},state),{},{isCitaActive:false,cita:{}});}case types.citasActualizarCitas:{return _objectSpread(_objectSpread({},state),{},{totalCitas:state.totalCitas.map(function(cita){return cita._id===action.payload._id?action.payload:cita;})});}case types.citasAgregarCita:{return _objectSpread(_objectSpread({},state),{},{totalCitas:[].concat(_toConsumableArray(state.totalCitas),[action.payload])});}default:return state;}};","map":{"version":3,"sources":["/home/marceliux/Development/BoilerLog/NodeTask/client/src/reducers/citasReducer.js"],"names":["types","initialState","isCitaActive","cita","totalCitas","citasReducer","state","action","type","citasSetCitaActiva","payload","citasRemoveCitaActiva","citasUpdateCitaActiva","citasSetCitas","citas","citasLimpiarCitas","citasCancelarCita","citasActualizarCitas","map","_id","citasAgregarCita"],"mappings":"+VAAA,OAAQA,KAAR,KAAoB,gBAApB,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,YAAY,CAAE,KADG,CAEjBC,IAAI,CAAE,EAFW,CAGjBC,UAAU,CAAE,EAHK,CAArB,CAMA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAA+B,IAA9BC,CAAAA,KAA8B,2DAAxBL,YAAwB,IAAVM,CAAAA,MAAU,2CACvD,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKR,CAAAA,KAAK,CAACS,kBAAX,CACI,sCACOH,KADP,MAEIH,IAAI,CAAEI,MAAM,CAACG,OAFjB,CAGIR,YAAY,CAAE,IAHlB,GAMJ,IAAKF,CAAAA,KAAK,CAACW,qBAAX,CACI,sCACOL,KADP,MAEIH,IAAI,CAAE,EAFV,CAGID,YAAY,CAAE,KAHlB,GAMJ,IAAKF,CAAAA,KAAK,CAACY,qBAAX,CACI,sCACON,KADP,MAEIH,IAAI,CAAEI,MAAM,CAACG,OAFjB,GAKJ,IAAKV,CAAAA,KAAK,CAACa,aAAX,CACI,sCACOP,KADP,MAEIF,UAAU,CAAEG,MAAM,CAACG,OAAP,CAAeI,KAF/B,GAKJ,IAAKd,CAAAA,KAAK,CAACe,iBAAX,CAA6B,CACzB,MAAO,CACHb,YAAY,CAAE,KADX,CAEHC,IAAI,CAAE,EAFH,CAGHC,UAAU,CAAE,EAHT,CAAP,CAKH,CAED,IAAKJ,CAAAA,KAAK,CAACgB,iBAAX,CAA6B,CACzB,sCACOV,KADP,MAEIJ,YAAY,CAAE,KAFlB,CAGIC,IAAI,CAAE,EAHV,GAKH,CAGD,IAAKH,CAAAA,KAAK,CAACiB,oBAAX,CAAgC,CAC5B,sCACOX,KADP,MAEIF,UAAU,CAAEE,KAAK,CAACF,UAAN,CAAiBc,GAAjB,CACR,SAAAf,IAAI,QAAIA,CAAAA,IAAI,CAACgB,GAAL,GAAaZ,MAAM,CAACG,OAAP,CAAeS,GAA5B,CACNZ,MAAM,CAACG,OADD,CAENP,IAFE,EADI,CAFhB,GAQH,CAED,IAAKH,CAAAA,KAAK,CAACoB,gBAAX,CAA4B,CACxB,sCACOd,KADP,MAEIF,UAAU,8BAAME,KAAK,CAACF,UAAZ,GAAwBG,MAAM,CAACG,OAA/B,EAFd,GAIH,CAED,QACI,MAAOJ,CAAAA,KAAP,CA/DR,CAiEH,CAlEM","sourcesContent":["import {types} from '../types/types'\n\nconst initialState = {\n    isCitaActive: false,\n    cita: {},\n    totalCitas: [],\n}\n\nexport const citasReducer = (state=initialState, action) =>{\n    switch (action.type) {\n        case types.citasSetCitaActiva:\n            return {\n                ...state,\n                cita: action.payload,\n                isCitaActive: true\n            }\n\n        case types.citasRemoveCitaActiva:\n            return {\n                ...state,\n                cita: {},\n                isCitaActive: false\n            }\n        \n        case types.citasUpdateCitaActiva:\n            return {\n                ...state,\n                cita: action.payload,\n            }\n        \n        case types.citasSetCitas:\n            return {\n                ...state,\n                totalCitas: action.payload.citas\n            }\n            \n        case types.citasLimpiarCitas:{\n            return {\n                isCitaActive: false,\n                cita: {},\n                totalCitas: []\n            }\n        }\n\n        case types.citasCancelarCita:{\n            return {\n                ...state,\n                isCitaActive: false,\n                cita: {},\n            }\n        }\n\n\n        case types.citasActualizarCitas:{\n            return {\n                ...state,\n                totalCitas: state.totalCitas.map(\n                    cita => cita._id === action.payload._id\n                    ? action.payload\n                    : cita\n                )\n            }\n        }\n\n        case types.citasAgregarCita:{\n            return {\n                ...state,\n                totalCitas: [...state.totalCitas, action.payload]\n            }\n        }\n        \n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}