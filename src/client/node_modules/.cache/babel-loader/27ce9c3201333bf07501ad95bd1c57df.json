{"ast":null,"code":"var _jsxFileName = \"/home/marceliux/Development/BoilerLog/NodeTask/src/client/src/components/ui/RadioButton.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setSelectedHorario } from '../../actions/horarios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RadioButton = ({\n  estado,\n  date,\n  horario,\n  label,\n  onChange\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [canceled, setCanceled] = useState(false); // const amOrPm = (hora) => hora < 12 ? 'am' : 'pm'\n\n  if (date && new Date(date).getHours() !== 0 && !canceled) {\n    const hour = new Date(date).getHours(); // const sufix = amOrPm(hour)\n\n    date = `${hour}:00 - ${hour + 1}:00`;\n  }\n\n  useEffect(() => {\n    estado === 'CANCELADA' && setCanceled(true);\n  }, [estado]);\n\n  const estadoString = estado => {\n    switch (estado) {\n      case 'CANCELADA':\n        return 'Cancelada';\n\n      case 'PENDIENTE':\n        return 'Pendiente';\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"radio-button mb-5\",\n    children: [onChange ? /*#__PURE__*/_jsxDEV(\"input\", {\n      disabled: canceled,\n      className: `${!horario && new Date(date).getHours() === 0 ? 'error' : ''}`,\n      value: horario,\n      onChange: onChange,\n      type: \"radio\",\n      name: \"card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n      value: horario,\n      onChange: e => dispatch(setSelectedHorario(e)),\n      type: \"radio\",\n      name: \"card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"radio-button__label\",\n      htmlFor: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: `radio-button__label-heading ${canceled ? 'canceled' : ''}`,\n        children: [label, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: `radio-button__label-subheading ${!horario && new Date(date).getHours() === 0 ? 'error' : canceled ? 'canceled' : ''}`,\n        children: date && new Date(date).getHours() !== 0 && estado !== 'CANCELADA' ? date : horario ? `${horario}:00 - ${horario + 1}:00` : estadoString(estado)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RadioButton, \"y5PjdeNXE7/E9wSzWLVnTtxQdqc=\", false, function () {\n  return [useDispatch];\n});\n\n_c = RadioButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"RadioButton\");","map":{"version":3,"sources":["/home/marceliux/Development/BoilerLog/NodeTask/src/client/src/components/ui/RadioButton.jsx"],"names":["React","useEffect","useState","useDispatch","setSelectedHorario","RadioButton","estado","date","horario","label","onChange","dispatch","canceled","setCanceled","Date","getHours","hour","estadoString","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,kBAAT,QAAmC,wBAAnC;;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA,IAAT;AAAeC,EAAAA,OAAf;AAAwBC,EAAAA,KAAxB;AAA+BC,EAAAA;AAA/B,CAAD,KAA8C;AAAA;;AAErE,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,KAAD,CAAxC,CAHqE,CAIrE;;AAEA,MAAGK,IAAI,IAAI,IAAIO,IAAJ,CAASP,IAAT,EAAeQ,QAAf,OAA8B,CAAtC,IAA2C,CAACH,QAA/C,EAAyD;AACrD,UAAMI,IAAI,GAAG,IAAIF,IAAJ,CAASP,IAAT,EAAeQ,QAAf,EAAb,CADqD,CAErD;;AACAR,IAAAA,IAAI,GAAI,GAAES,IAAK,SAAQA,IAAI,GAAG,CAAE,KAAhC;AACH;;AAEDf,EAAAA,SAAS,CAAC,MAAI;AACVK,IAAAA,MAAM,KAAK,WAAX,IAA0BO,WAAW,CAAC,IAAD,CAArC;AACH,GAFQ,EAEN,CAACP,MAAD,CAFM,CAAT;;AAIA,QAAMW,YAAY,GAAIX,MAAD,IAAY;AAC7B,YAAQA,MAAR;AACI,WAAK,WAAL;AACI,eAAO,WAAP;;AAEJ,WAAK,WAAL;AACI,eAAO,WAAP;;AAEJ;AACI;AARR;AAUH,GAXD;;AAaA,sBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,eAEQI,QAAQ,gBACF;AAAO,MAAA,QAAQ,EAAEE,QAAjB;AAA0B,MAAA,SAAS,EAAG,GAAE,CAACJ,OAAD,IAAY,IAAIM,IAAJ,CAASP,IAAT,EAAeQ,QAAf,OAA8B,CAA1C,GAA8C,OAA9C,GAAwD,EAAG,EAAnG;AAAsG,MAAA,KAAK,EAAEP,OAA7G;AAAsH,MAAA,QAAQ,EAAEE,QAAhI;AAA0I,MAAA,IAAI,EAAC,OAA/I;AAAuJ,MAAA,IAAI,EAAC;AAA5J;AAAA;AAAA;AAAA;AAAA,YADE,gBAEF;AAAO,MAAA,KAAK,EAAEF,OAAd;AAAuB,MAAA,QAAQ,EAAEU,CAAC,IAAIP,QAAQ,CAACP,kBAAkB,CAACc,CAAD,CAAnB,CAA9C;AAAuE,MAAA,IAAI,EAAC,OAA5E;AAAoF,MAAA,IAAI,EAAC;AAAzF;AAAA;AAAA;AAAA;AAAA,YAJd,eAMI;AAAO,MAAA,SAAS,EAAC,qBAAjB;AAAuC,MAAA,OAAO,EAAC,MAA/C;AAAA,8BACI;AAAI,QAAA,SAAS,EAAG,+BAA8BN,QAAQ,GAAG,UAAH,GAAgB,EAAG,EAAzE;AAAA,mBAA6EH,KAA7E;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,SAAS,EAAG,kCAAiC,CAACD,OAAD,IAAY,IAAIM,IAAJ,CAASP,IAAT,EAAeQ,QAAf,OAA8B,CAA1C,GAA8C,OAA9C,GAAwDH,QAAQ,GAAG,UAAH,GAAgB,EAAG,EAApI;AAAA,kBAEQL,IAAI,IAAI,IAAIO,IAAJ,CAASP,IAAT,EAAeQ,QAAf,OAA8B,CAAtC,IAA2CT,MAAM,KAAK,WAAtD,GACMC,IADN,GAEMC,OAAO,GACF,GAAEA,OAAQ,SAAQA,OAAO,GAAC,CAAE,KAD1B,GAEHS,YAAY,CAACX,MAAD;AAN9B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CAlDM;;GAAMD,W;UAEQF,W;;;KAFRE,W","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { setSelectedHorario } from '../../actions/horarios'\n\nexport const RadioButton = ({estado, date, horario, label, onChange}) => {\n\n    const dispatch = useDispatch()\n    const [canceled, setCanceled] = useState(false)\n    // const amOrPm = (hora) => hora < 12 ? 'am' : 'pm'\n\n    if(date && new Date(date).getHours() !== 0 && !canceled ){\n        const hour = new Date(date).getHours()\n        // const sufix = amOrPm(hour)\n        date = `${hour}:00 - ${hour + 1}:00`\n    }\n\n    useEffect(()=>{\n        estado === 'CANCELADA' && setCanceled(true)\n    }, [estado])\n\n    const estadoString = (estado) => {\n        switch (estado) {\n            case 'CANCELADA':\n                return 'Cancelada'\n\n            case 'PENDIENTE':\n                return 'Pendiente'\n\n            default:\n                break;\n        }\n    }\n    \n    return (\n        <div className=\"radio-button mb-5\">\n            {\n                onChange \n                    ? <input disabled={canceled}className={`${!horario && new Date(date).getHours() === 0 ? 'error' : ''}`} value={horario} onChange={onChange} type=\"radio\" name=\"card\" />\n                    : <input value={horario} onChange={e => dispatch(setSelectedHorario(e))} type=\"radio\" name=\"card\" />\n            }\n            <label className=\"radio-button__label\" htmlFor=\"card\">\n                <h5 className={`radio-button__label-heading ${canceled ? 'canceled' : ''}`}>{label}:</h5>\n                <h6 className={`radio-button__label-subheading ${!horario && new Date(date).getHours() === 0 ? 'error' : canceled ? 'canceled' : ''}`  }>\n                    {\n                        date && new Date(date).getHours() !== 0 && estado !== 'CANCELADA'\n                            ? date \n                            : horario \n                                ? `${horario}:00 - ${horario+1}:00` \n                                : estadoString(estado)\n                    }\n                </h6>\n            </label>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}