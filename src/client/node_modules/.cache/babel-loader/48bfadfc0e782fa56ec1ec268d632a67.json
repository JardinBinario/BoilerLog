{"ast":null,"code":"import _regeneratorRuntime from\"/home/marceliux/Development/BoilerLog/NodeTask/src/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/marceliux/Development/BoilerLog/NodeTask/src/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{types}from'../types/types';import{fetchLogin,fetchValidateJWT}from'../services/fetch';import{setToastActivo}from'./ui';export var login=function login(uid,displayName,rol){return{type:types.authLogin,payload:{uid:uid,displayName:displayName,rol:rol}};};export var startLogin=function startLogin(_ref){var user=_ref.user,pwd=_ref.pwd;return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var resp,body;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetchLogin(user,pwd);case 2:resp=_context.sent;_context.next=5;return resp.json();case 5:body=_context.sent;if(body.ok){localStorage.setItem('token',body.token);localStorage.setItem('token-init-date',new Date().getTime());dispatch(login(body.uid,body.user,body.rol));}else{dispatch(setToastActivo(body.msg));}case 7:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}();};export var startLogout=function startLogout(){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:localStorage.removeItem('token');localStorage.removeItem('token-init-date');dispatch(logout());case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref3.apply(this,arguments);};}();};export var logout=function logout(){return{type:types.logout};};export var startChecking=function startChecking(){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var token,resp,body;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:token=localStorage.getItem('token');_context3.next=3;return fetchValidateJWT(token);case 3:resp=_context3.sent;_context3.next=6;return resp.json();case 6:body=_context3.sent;if(body.ok){localStorage.setItem('token',body.token);localStorage.setItem('token-init-date',new Date().getTime());dispatch(login(body.uid,body.name,body.rol));}else{dispatch(checkingFinished());}case 8:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref4.apply(this,arguments);};}();};export var checkingFinished=function checkingFinished(){return{type:types.authCheckingFinished};};","map":{"version":3,"sources":["/home/marceliux/Development/BoilerLog/NodeTask/src/client/src/actions/auth.js"],"names":["types","fetchLogin","fetchValidateJWT","setToastActivo","login","uid","displayName","rol","type","authLogin","payload","startLogin","user","pwd","dispatch","resp","json","body","ok","localStorage","setItem","token","Date","getTime","msg","startLogout","removeItem","logout","startChecking","getItem","name","checkingFinished","authCheckingFinished"],"mappings":"6VAAA,OAAQA,KAAR,KAAoB,gBAApB,CACA,OAASC,UAAT,CAAqBC,gBAArB,KAA6C,mBAA7C,CACA,OAASC,cAAT,KAA+B,MAA/B,CAGA,MAAO,IAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,GAAD,CAAMC,WAAN,CAAmBC,GAAnB,QAA4B,CAC7CC,IAAI,CAAER,KAAK,CAACS,SADiC,CAE7CC,OAAO,CAAE,CACLL,GAAG,CAAHA,GADK,CAELC,WAAW,CAAXA,WAFK,CAGLC,GAAG,CAAHA,GAHK,CAFoC,CAA5B,EAAd,CASP,MAAO,IAAMI,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAAiB,IAAfC,CAAAA,IAAe,MAAfA,IAAe,CAATC,GAAS,MAATA,GAAS,CACvC,gGAAO,iBAAOC,QAAP,sJACgBb,CAAAA,UAAU,CAACW,IAAD,CAAOC,GAAP,CAD1B,QACGE,IADH,qCAEgBA,CAAAA,IAAI,CAACC,IAAL,EAFhB,QAEGC,IAFH,eAIH,GAAGA,IAAI,CAACC,EAAR,CAAW,CACPC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BH,IAAI,CAACI,KAAnC,EACAF,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAwC,GAAIE,CAAAA,IAAJ,GAAWC,OAAX,EAAxC,EACAT,QAAQ,CAACV,KAAK,CAACa,IAAI,CAACZ,GAAN,CAAWY,IAAI,CAACL,IAAhB,CAAsBK,IAAI,CAACV,GAA3B,CAAN,CAAR,CACH,CAJD,IAIK,CACDO,QAAQ,CAACX,cAAc,CAACc,IAAI,CAACO,GAAN,CAAf,CAAR,CACH,CAVE,sDAAP,gEAaH,CAdM,CAiBP,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CAC7B,gGAAO,kBAAOX,QAAP,sHACHK,YAAY,CAACO,UAAb,CAAwB,OAAxB,EACAP,YAAY,CAACO,UAAb,CAAwB,iBAAxB,EAEAZ,QAAQ,CAACa,MAAM,EAAP,CAAR,CAJG,wDAAP,iEAMH,CAPM,CASP,MAAO,IAAMA,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,SAAO,CAACnB,IAAI,CAAER,KAAK,CAAC2B,MAAb,CAAP,EAAf,CAGP,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC/B,gGAAO,kBAAOd,QAAP,0IACGO,KADH,CACWF,YAAY,CAACU,OAAb,CAAqB,OAArB,CADX,wBAEgB3B,CAAAA,gBAAgB,CAACmB,KAAD,CAFhC,QAEGN,IAFH,uCAGgBA,CAAAA,IAAI,CAACC,IAAL,EAHhB,QAGGC,IAHH,gBAKH,GAAGA,IAAI,CAACC,EAAR,CAAW,CACPC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BH,IAAI,CAACI,KAAnC,EACAF,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAwC,GAAIE,CAAAA,IAAJ,GAAWC,OAAX,EAAxC,EACAT,QAAQ,CAACV,KAAK,CAACa,IAAI,CAACZ,GAAN,CAAWY,IAAI,CAACa,IAAhB,CAAsBb,IAAI,CAACV,GAA3B,CAAN,CAAR,CACH,CAJD,IAIK,CACDO,QAAQ,CAACiB,gBAAgB,EAAjB,CAAR,CACH,CAXE,wDAAP,iEAcH,CAfM,CAiBP,MAAO,IAAMA,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,SAAO,CAACvB,IAAI,CAAER,KAAK,CAACgC,oBAAb,CAAP,EAAzB","sourcesContent":["import {types} from '../types/types'\nimport { fetchLogin, fetchValidateJWT } from '../services/fetch'\nimport { setToastActivo } from './ui'\n\n\nexport const login = (uid, displayName, rol) => ({\n    type: types.authLogin,\n    payload: {\n        uid,\n        displayName,\n        rol\n    }\n})\n\nexport const startLogin = ({user, pwd}) => {\n    return async (dispatch)=> {\n        const resp = await fetchLogin(user, pwd)\n        const body = await resp.json()\n\n        if(body.ok){\n            localStorage.setItem('token', body.token)\n            localStorage.setItem('token-init-date', new Date().getTime())\n            dispatch(login(body.uid, body.user, body.rol))\n        }else{\n            dispatch(setToastActivo(body.msg))\n        }\n        \n    }\n}\n\n\nexport const startLogout = () => {\n    return async (dispatch) => {\n        localStorage.removeItem('token')\n        localStorage.removeItem('token-init-date')\n\n        dispatch(logout())\n    }\n}\n\nexport const logout = () => ({type: types.logout})\n\n\nexport const startChecking = () => {\n    return async (dispatch) => {\n        const token = localStorage.getItem('token')\n        const resp = await fetchValidateJWT(token)\n        const body = await resp.json()\n\n        if(body.ok){\n            localStorage.setItem('token', body.token)\n            localStorage.setItem('token-init-date', new Date().getTime())\n            dispatch(login(body.uid, body.name, body.rol))\n        }else{\n            dispatch(checkingFinished())\n        }\n\n    }\n}\n\nexport const checkingFinished = () => ({type: types.authCheckingFinished})"]},"metadata":{},"sourceType":"module"}