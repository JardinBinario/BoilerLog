{"ast":null,"code":"import { fetchGetUsers, fetchPutUser, fetchRegister } from '../services/fetch';\nimport { types } from '../types/types';\nimport { setToastActivo } from './ui';\nexport const startLoadingUsers = () => {\n  return async dispatch => {\n    const token = localStorage.getItem('token');\n    const response = await fetchGetUsers(token);\n    const {\n      ok,\n      users\n    } = await response.json();\n    ok && users.length > 0 ? dispatch(setUsers(users)) : dispatch(setUsers([]));\n  };\n};\n\nconst setUsers = users => ({\n  type: types.usersSetUsers,\n  payload: {\n    users: [...users]\n  }\n});\n\nexport const startRegularRegister = ({\n  email,\n  pwd,\n  name,\n  lastName,\n  user\n}, admin) => {\n  return async (dispatch, getState) => {\n    const resp = await fetchRegister(email, pwd, name, lastName, user, admin);\n    const {\n      ok,\n      newUser,\n      errors,\n      msg\n    } = await resp.json();\n    const {\n      totalUsers\n    } = getState().usuarios;\n\n    if (ok) {\n      dispatch(setUsers([...totalUsers, newUser]));\n      dispatch(setToastActivo(msg));\n    } else {\n      errors ? dispatch(setToastActivo(errors[Object.keys(errors)[0]].msg)) : dispatch(setToastActivo(msg));\n    }\n  };\n};\nexport const startDisablingUser = _id => {\n  return async (dispatch, getState) => {\n    const token = localStorage.getItem('token');\n    const response = await fetchPutUser(token, _id);\n    const {\n      ok,\n      msg,\n      newUser\n    } = await response.json();\n    let {\n      totalUsers\n    } = getState().usuarios;\n\n    if (ok) {\n      totalUsers = totalUsers.map(user => user._id === newUser._id ? newUser : user);\n      dispatch(setUsers(totalUsers));\n      dispatch(setToastActivo(msg));\n    }\n  };\n};\nexport const startUpdatingUser = (_id, update) => {\n  return async (dispatch, getState) => {\n    const token = localStorage.getItem('token');\n    const response = await fetchPutUser(token, _id, update);\n    const {\n      ok,\n      msg,\n      newUser\n    } = await response.json();\n    let {\n      totalUsers\n    } = getState().usuarios;\n\n    if (ok) {\n      totalUsers = totalUsers.map(user => user._id === newUser._id ? newUser : user);\n      dispatch(setUsers(totalUsers));\n      dispatch(setToastActivo(msg));\n    }\n  };\n};","map":{"version":3,"sources":["/home/marceliux/Development/BoilerLog/NodeTask/src/client/src/actions/users.js"],"names":["fetchGetUsers","fetchPutUser","fetchRegister","types","setToastActivo","startLoadingUsers","dispatch","token","localStorage","getItem","response","ok","users","json","length","setUsers","type","usersSetUsers","payload","startRegularRegister","email","pwd","name","lastName","user","admin","getState","resp","newUser","errors","msg","totalUsers","usuarios","Object","keys","startDisablingUser","_id","map","startUpdatingUser","update"],"mappings":"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","sourcesContent":["import { fetchGetUsers, fetchPutUser, fetchRegister } from '../services/fetch'\nimport {types} from '../types/types'\nimport { setToastActivo } from './ui'\n\n\nexport const startLoadingUsers = () =>{\n    return async dispatch => {\n        const token = localStorage.getItem('token')\n\n        const response = await fetchGetUsers(token)\n        const {ok, users} = await response.json()\n\n        ok && users.length > 0 ? dispatch(setUsers(users)) : dispatch(setUsers([]))\n    }\n}\n\nconst setUsers = (users) => ({\n    type: types.usersSetUsers,\n    payload:{\n        users: [...users]\n    }\n})\n\nexport const startRegularRegister = ({email, pwd, name, lastName, user}, admin) => {\n    return async (dispatch, getState) => {\n        const resp = await fetchRegister(email, pwd, name, lastName, user, admin)\n        const {ok, newUser, errors, msg} = await resp.json()\n        \n        const {totalUsers} = getState().usuarios\n\n        if(ok){\n            dispatch(setUsers([...totalUsers, newUser]))\n            dispatch(setToastActivo(msg))\n        }else{\n            errors \n                ? dispatch(setToastActivo(errors[Object.keys(errors)[0]].msg))\n                : dispatch(setToastActivo(msg))\n        }\n    }\n}\n\nexport const startDisablingUser = (_id) =>{\n    return async (dispatch, getState) => {\n        const token = localStorage.getItem('token')\n\n        const response = await fetchPutUser(token, _id)\n        const {ok, msg, newUser} = await response.json()\n\n        let {totalUsers} = getState().usuarios\n\n        if(ok){\n            totalUsers = totalUsers.map(user => user._id === newUser._id ? newUser : user)\n            dispatch(setUsers(totalUsers))            \n            dispatch(setToastActivo(msg))\n        }\n    }\n}\n\nexport const startUpdatingUser = (_id, update) =>{\n    return async (dispatch, getState) => {\n        const token = localStorage.getItem('token')\n        const response = await fetchPutUser(token, _id, update)\n        const {ok, msg, newUser} = await response.json()\n\n        let {totalUsers} = getState().usuarios\n\n        if(ok){\n            totalUsers = totalUsers.map(user => user._id === newUser._id ? newUser : user)\n            dispatch(setUsers(totalUsers))            \n            dispatch(setToastActivo(msg))\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}