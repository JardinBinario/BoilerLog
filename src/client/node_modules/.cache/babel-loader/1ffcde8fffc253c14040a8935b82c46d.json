{"ast":null,"code":"import React,{useEffect}from'react';import{BrowserRouter as Router,Switch,Route}from'react-router-dom';import{AuthRouter}from'./AuthRouter';import{useDispatch,useSelector}from'react-redux';import{startChecking}from'../actions/auth';import{Spinner}from'../components/ui/Spinner';import{PrivateRoute}from'./PrivateRoute';import{PublicRoute}from'./PublicRoute';import{ScheduleScreen}from'../components/screens/ScheduleScreen';import{DashboardRoutes}from'./DashboardRoutes';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var AppRouter=function AppRouter(){var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.auth;}),checking=_useSelector.checking,uid=_useSelector.uid;useEffect(function(){dispatch(startChecking());},[dispatch]);if(checking){return/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',height:'100vh',alignItems:'center'},children:/*#__PURE__*/_jsx(Spinner,{size:\"big\"})});}return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/public/schedule/:_id\",component:ScheduleScreen}),/*#__PURE__*/_jsx(PrivateRoute,{isAuthenticated:!!uid,path:\"/dentaltask\",component:DashboardRoutes}),/*#__PURE__*/_jsx(PublicRoute,{path:\"/\",isAuthenticated:!!uid,component:AuthRouter})]})})});};","map":{"version":3,"sources":["/home/marceliux/Development/BoilerLog/NodeTask/client/src/routers/AppRouter.jsx"],"names":["React","useEffect","BrowserRouter","Router","Switch","Route","AuthRouter","useDispatch","useSelector","startChecking","Spinner","PrivateRoute","PublicRoute","ScheduleScreen","DashboardRoutes","AppRouter","dispatch","state","auth","checking","uid","display","height","alignItems"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,aAAa,GAAIC,CAAAA,MAA1B,CAAkCC,MAAlC,CAA0CC,KAA1C,KAAuD,kBAAvD,CACA,OAASC,UAAT,KAA2B,cAA3B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,aAAT,KAA8B,iBAA9B,CACA,OAASC,OAAT,KAAwB,0BAAxB,CACA,OAASC,YAAT,KAA6B,gBAA7B,CACA,OAASC,WAAT,KAA4B,eAA5B,CACA,OAASC,cAAT,KAA+B,sCAA/B,CACA,OAASC,eAAT,KAAgC,mBAAhC,C,wFAEA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CAE3B,GAAMC,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CAF2B,iBAIHC,WAAW,CAAC,SAAAS,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAV,EAAN,CAJR,CAIpBC,QAJoB,cAIpBA,QAJoB,CAIVC,GAJU,cAIVA,GAJU,CAM3BnB,SAAS,CAAC,UAAK,CACXe,QAAQ,CAACP,aAAa,EAAd,CAAR,CACH,CAFQ,CAEN,CAACO,QAAD,CAFM,CAAT,CAIA,GAAIG,QAAJ,CAAa,CACT,mBACI,YAAK,KAAK,CAAE,CAACE,OAAO,CAAE,MAAV,CAAkBC,MAAM,CAAE,OAA1B,CAAmCC,UAAU,CAAE,QAA/C,CAAZ,uBACI,KAAC,OAAD,EAAS,IAAI,CAAC,KAAd,EADJ,EADJ,CAKH,CAED,mBACI,KAAC,MAAD,wBACI,kCACI,MAAC,MAAD,yBACI,KAAC,KAAD,EAAO,IAAI,CAAC,uBAAZ,CAAoC,SAAS,CAAEV,cAA/C,EADJ,cAEI,KAAC,YAAD,EAAc,eAAe,CAAE,CAAC,CAACO,GAAjC,CAAsC,IAAI,CAAC,aAA3C,CAAyD,SAAS,CAAEN,eAApE,EAFJ,cAGI,KAAC,WAAD,EAAa,IAAI,CAAC,GAAlB,CAAsB,eAAe,CAAE,CAAC,CAACM,GAAzC,CAA8C,SAAS,CAAEd,UAAzD,EAHJ,GADJ,EADJ,EADJ,CAWH,CA7BM","sourcesContent":["import React, { useEffect } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { AuthRouter } from './AuthRouter'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startChecking } from '../actions/auth'\nimport { Spinner } from '../components/ui/Spinner'\nimport { PrivateRoute } from './PrivateRoute'\nimport { PublicRoute } from './PublicRoute'\nimport { ScheduleScreen } from '../components/screens/ScheduleScreen'\nimport { DashboardRoutes } from './DashboardRoutes'\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch()\n\n    const {checking, uid} = useSelector(state => state.auth)\n\n    useEffect(()=> {\n        dispatch(startChecking())\n    }, [dispatch])\n\n    if (checking){\n        return(\n            <div style={{display: 'flex', height: '100vh', alignItems: 'center'}}>\n                <Spinner size=\"big\"/>\n            </div>\n        )\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <Route path=\"/public/schedule/:_id\" component={ScheduleScreen}/>\n                    <PrivateRoute isAuthenticated={!!uid} path=\"/dentaltask\" component={DashboardRoutes} />\n                    <PublicRoute path=\"/\" isAuthenticated={!!uid} component={AuthRouter}/>\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}