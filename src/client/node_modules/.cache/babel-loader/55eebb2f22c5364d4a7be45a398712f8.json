{"ast":null,"code":"import _slicedToArray from\"/home/marceliux/Development/BoilerLog/NodeTask/src/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';export var useCalendar=function useCalendar(citas,nav){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),dateDisplay=_useState2[0],setDateDisplay=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),dias=_useState4[0],setDias=_useState4[1];useEffect(function(){var citasPorDia=function citasPorDia(diaActual){return citas.filter(function(cita){return new Date(cita.fechaDeseada).toDateString()===new Date(diaActual).toDateString()&&cita;});};var capitalizar=function capitalizar(word){return word.charAt(0).toUpperCase()+word.slice(1);};var semana=['Domingo','Lunes','Martes','Miércoles','Jueves','Viernes','Sábado'];var fecha=new Date();nav!==0&&fecha.setMonth(new Date().getMonth()+nav);var dia=fecha.getDate(),mes=fecha.getMonth(),anho=fecha.getFullYear();var primerDiaDelMes=new Date(anho,mes,1);var diasEnMes=new Date(anho,mes+1,0).getDate();var dateString=primerDiaDelMes.toLocaleDateString('es-us',{weekday:'long',year:'numeric',month:'numeric',day:'numeric'});var nombreDelPrimerDia=capitalizar(dateString.split(', ')[0]);var diasComodinInicio=semana.indexOf(nombreDelPrimerDia);setDateDisplay(\"\".concat(capitalizar(fecha.toLocaleDateString('es',{month:'long'}))));var daysArr=[];for(var i=1;i<=diasComodinInicio+diasEnMes;i++){var diaActual=\"\".concat(mes+1,\"/\").concat(i-diasComodinInicio,\"/\").concat(anho);if(i>diasComodinInicio){daysArr.push({value:i-diasComodinInicio,citas:citasPorDia(diaActual),esHoy:diaActual.split('/')[1]===dia.toString()&&nav===0?true:false,date:diaActual});}else{daysArr.push({value:'padding',citas:null,esHoy:false,date:''});}}setDias(daysArr);},[citas,nav]);return[dias,dateDisplay];};","map":{"version":3,"sources":["/home/marceliux/Development/BoilerLog/NodeTask/src/client/src/components/hooks/useCalendar.js"],"names":["useState","useEffect","useCalendar","citas","nav","dateDisplay","setDateDisplay","dias","setDias","citasPorDia","diaActual","filter","cita","Date","fechaDeseada","toDateString","capitalizar","word","charAt","toUpperCase","slice","semana","fecha","setMonth","getMonth","dia","getDate","mes","anho","getFullYear","primerDiaDelMes","diasEnMes","dateString","toLocaleDateString","weekday","year","month","day","nombreDelPrimerDia","split","diasComodinInicio","indexOf","daysArr","i","push","value","esHoy","toString","date"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\n\nexport const useCalendar = (citas, nav) => {\n    \n    const [dateDisplay, setDateDisplay] = useState('')\n    const [dias, setDias] = useState([])\n\n    useEffect(()=>{\n\n        const citasPorDia = (diaActual) => \n        citas.filter( cita => new Date(cita.fechaDeseada).toDateString() === new Date(diaActual).toDateString() && cita )\n\n        const capitalizar = word => word.charAt(0).toUpperCase() + word.slice(1)\n        const semana = ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado']\n\n        const fecha = new Date()\n        nav !== 0 && fecha.setMonth(new Date().getMonth() + nav)\n        \n        const \n            dia = fecha.getDate(),\n            mes = fecha.getMonth(),\n            anho = fecha.getFullYear()\n    \n        const primerDiaDelMes = new Date(anho, mes, 1)\n        const diasEnMes = new Date(anho, mes + 1, 0).getDate()\n        const dateString = primerDiaDelMes.toLocaleDateString('es-us', {\n            weekday: 'long',\n            year: 'numeric',\n            month: 'numeric',\n            day: 'numeric'\n        })\n    \n\n        const nombreDelPrimerDia = capitalizar(dateString.split(', ')[0])\n        const diasComodinInicio = semana.indexOf(nombreDelPrimerDia)\n\n        setDateDisplay(`${capitalizar(fecha.toLocaleDateString('es', {month:'long'}))}`)\n\n        const daysArr = []\n\n        for(let i = 1; i<=diasComodinInicio + diasEnMes; i++){\n            const diaActual = `${mes+1}/${i - diasComodinInicio}/${anho}`\n            if(i > diasComodinInicio){\n                daysArr.push({\n                    value: i - diasComodinInicio,\n                    citas: citasPorDia(diaActual),\n                    esHoy: diaActual.split('/')[1] === dia.toString() && nav === 0 ? true : false,\n                    date: diaActual\n                })\n            }else{\n                daysArr.push({\n                    value: 'padding',\n                    citas: null,\n                    esHoy: false,\n                    date: ''\n                })\n            }\n        }\n\n        setDias(daysArr)\n\n    }, [citas, nav])\n\n    return [ dias, dateDisplay ]\n\n}"]},"metadata":{},"sourceType":"module"}