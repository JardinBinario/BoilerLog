{"ast":null,"code":"var _jsxFileName = \"/home/marceliux/Development/BoilerLog/NodeTask/src/client/src/components/ui/reports/PieChart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport { fetchPostReporte } from '../../../services/fetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PieChart = ({\n  reporte,\n  mes\n}) => {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    async function fetchReport() {\n      const token = localStorage.getItem('token');\n      const response = await fetchPostReporte(reporte, {\n        mes\n      }, token);\n      const parsedResponse = await response.json();\n      setData(parsedResponse.data);\n    }\n\n    fetchReport();\n  }, [reporte, mes]);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: 'auto'\n    },\n    children: /*#__PURE__*/_jsxDEV(Pie, {\n      id: \"report\",\n      data: {\n        labels: data.map(({\n          estado\n        }) => estado),\n        datasets: [{\n          label: `${reporte}`,\n          data: data.map(({\n            conteo\n          }) => conteo),\n          backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n          borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n          borderWidth: 1\n        }]\n      },\n      height: 600,\n      width: 1200,\n      options: {\n        maintainAspectRatio: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PieChart, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = PieChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"PieChart\");","map":{"version":3,"sources":["/home/marceliux/Development/BoilerLog/NodeTask/src/client/src/components/ui/reports/PieChart.jsx"],"names":["React","useEffect","useState","Pie","fetchPostReporte","PieChart","reporte","mes","data","setData","fetchReport","token","localStorage","getItem","response","parsedResponse","json","console","log","margin","labels","map","estado","datasets","label","conteo","backgroundColor","borderColor","borderWidth","maintainAspectRatio"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAQC,GAAR,QAAkB,iBAAlB;AACA,SAASC,gBAAT,QAAiC,yBAAjC;;AAGA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,CAAD,KAAoB;AAAA;;AAExC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACV,mBAAeS,WAAf,GAA6B;AACzB,YAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,YAAMC,QAAQ,GAAG,MAAMV,gBAAgB,CAACE,OAAD,EAAU;AAACC,QAAAA;AAAD,OAAV,EAAiBI,KAAjB,CAAvC;AACA,YAAMI,cAAc,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAA7B;AACAP,MAAAA,OAAO,CAACM,cAAc,CAACP,IAAhB,CAAP;AACD;;AACDE,IAAAA,WAAW;AAChB,GARQ,EAQN,CAACJ,OAAD,EAAUC,GAAV,CARM,CAAT;AAUAU,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AAEA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACW,MAAAA,MAAM,EAAE;AAAT,KAAZ;AAAA,2BACI,QAAC,GAAD;AACI,MAAA,EAAE,EAAC,QADP;AAEI,MAAA,IAAI,EAAE;AACFC,QAAAA,MAAM,EAAEZ,IAAI,CAACa,GAAL,CAAS,CAAC;AAACC,UAAAA;AAAD,SAAD,KAAcA,MAAvB,CADN;AAEFC,QAAAA,QAAQ,EAAE,CAAC;AACPC,UAAAA,KAAK,EAAG,GAAElB,OAAQ,EADX;AAEPE,UAAAA,IAAI,EAAEA,IAAI,CAACa,GAAL,CAAS,CAAC;AAACI,YAAAA;AAAD,WAAD,KAAcA,MAAvB,CAFC;AAGPC,UAAAA,eAAe,EAAE,CACb,yBADa,EAEb,yBAFa,EAGb,yBAHa,EAIb,yBAJa,EAKb,0BALa,EAMb,yBANa,CAHV;AAWPC,UAAAA,WAAW,EAAE,CACT,uBADS,EAET,uBAFS,EAGT,uBAHS,EAIT,uBAJS,EAKT,wBALS,EAMT,uBANS,CAXN;AAmBPC,UAAAA,WAAW,EAAE;AAnBN,SAAD;AAFR,OAFV;AA2BI,MAAA,MAAM,EAAE,GA3BZ;AA4BI,MAAA,KAAK,EAAE,IA5BX;AA6BI,MAAA,OAAO,EAAE;AACLC,QAAAA,mBAAmB,EAAE;AADhB;AA7Bb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqCH,CArDM;;GAAMxB,Q;;KAAAA,Q","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {Pie} from 'react-chartjs-2'\nimport { fetchPostReporte } from '../../../services/fetch'\n\n\nexport const PieChart = ({reporte, mes}) => {\n\n    const [data, setData] = useState([])\n\n    useEffect(()=>{\n        async function fetchReport() {\n            const token = localStorage.getItem('token')\n            const response = await fetchPostReporte(reporte, {mes}, token)\n            const parsedResponse = await response.json()\n            setData(parsedResponse.data)\n          }\n          fetchReport();\n    }, [reporte, mes])\n\n    console.log(data)\n\n    return (\n        <div style={{margin: 'auto'}}>\n            <Pie \n                id=\"report\"\n                data={{\n                    labels: data.map(({estado}) => estado),\n                    datasets: [{\n                        label: `${reporte}`,\n                        data: data.map(({conteo}) => conteo),\n                        backgroundColor: [\n                            'rgba(255, 99, 132, 0.2)',\n                            'rgba(54, 162, 235, 0.2)',\n                            'rgba(255, 206, 86, 0.2)',\n                            'rgba(75, 192, 192, 0.2)',\n                            'rgba(153, 102, 255, 0.2)',\n                            'rgba(255, 159, 64, 0.2)'\n                        ],\n                        borderColor: [\n                            'rgba(255, 99, 132, 1)',\n                            'rgba(54, 162, 235, 1)',\n                            'rgba(255, 206, 86, 1)',\n                            'rgba(75, 192, 192, 1)',\n                            'rgba(153, 102, 255, 1)',\n                            'rgba(255, 159, 64, 1)'\n                        ],\n                        borderWidth: 1,\n                    }]\n                }}\n\n                height={600}\n                width={1200}\n                options={{\n                    maintainAspectRatio: true\n                }}\n            />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}