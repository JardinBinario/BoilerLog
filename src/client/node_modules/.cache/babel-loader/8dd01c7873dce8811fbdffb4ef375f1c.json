{"ast":null,"code":"import _toConsumableArray from\"/home/marceliux/Development/BoilerLog/NodeTask/src/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/home/marceliux/Development/BoilerLog/NodeTask/src/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/marceliux/Development/BoilerLog/NodeTask/src/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"/home/marceliux/Development/BoilerLog/NodeTask/src/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{fetchPutCitas,fetchGetCitas,fetchPostCitas,fetchDeleteCitas}from'../services/fetch';import{types}from'../types/types';import{setCitasPaciente}from'./pacientes';import{setDiaActivo,setToastActivo}from'./ui';export var setCitaActiva=function setCitaActiva(cita){return{type:types.citasSetCitaActiva,payload:_objectSpread({},cita)};};export var removeCitaActiva=function removeCitaActiva(){return{type:types.citasRemoveCitaActiva};};export var startUpdateCita=function startUpdateCita(cita){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch,getState){var citasPorPaciente,diaActivo,newCitas,token,resp,_yield$resp$json,ok,msg,newCita;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:citasPorPaciente=getState().pacientes.citasPorPaciente;diaActivo=getState().ui.diaActivo;newCitas=citasPorPaciente.map(function(v){return v._id===cita._id?cita:v;});if(Object.keys(diaActivo).length>0){diaActivo.citas=diaActivo.citas.map(function(val){return val._id===cita._id?cita:val;});dispatch(setDiaActivo(diaActivo));}token=localStorage.getItem('token');_context.next=7;return fetchPutCitas(token,cita);case 7:resp=_context.sent;_context.next=10;return resp.json();case 10:_yield$resp$json=_context.sent;ok=_yield$resp$json.ok;msg=_yield$resp$json.msg;newCita=_yield$resp$json.newCita;if(ok){dispatch(setToastActivo(msg));dispatch(refreshCitas(newCita));dispatch(setCitasPaciente(newCitas));dispatch(cancelCita());}case 15:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2){return _ref.apply(this,arguments);};}();};var refreshCitas=function refreshCitas(cita){return{type:types.citasActualizarCitas,payload:cita};};var cancelCita=function cancelCita(){return{type:types.citasCancelarCita};};export var startCancelingCita=function startCancelingCita(cita){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch,getState){var token,resp,_yield$resp$json2,ok,msg,updatedCita,diaActivo;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:token=localStorage.getItem('token');_context2.next=3;return fetchDeleteCitas(token,cita._id);case 3:resp=_context2.sent;_context2.next=6;return resp.json();case 6:_yield$resp$json2=_context2.sent;ok=_yield$resp$json2.ok;msg=_yield$resp$json2.msg;updatedCita=_yield$resp$json2.cita;diaActivo=getState().ui.diaActivo;diaActivo.citas=diaActivo.citas.map(function(cita){return cita._id===updatedCita._id?updatedCita:cita;});if(ok){dispatch(cancelCita());dispatch(setToastActivo(msg));dispatch(refreshCitas(updatedCita));dispatch(setDiaActivo(diaActivo));}case 13:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x3,_x4){return _ref2.apply(this,arguments);};}();};var agregarCita=function agregarCita(cita){return{type:types.citasAgregarCita,payload:_objectSpread({},cita)};};export var startAddingCita=function startAddingCita(paciente,horario){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch,getState){var token,resp,_yield$resp$json3,ok,msg,newCita,diaActivo;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:token=localStorage.getItem('token');_context3.next=3;return fetchPostCitas(token,paciente,horario);case 3:resp=_context3.sent;_context3.next=6;return resp.json();case 6:_yield$resp$json3=_context3.sent;ok=_yield$resp$json3.ok;msg=_yield$resp$json3.msg;newCita=_yield$resp$json3.newCita;diaActivo=getState().ui.diaActivo;if(ok){diaActivo.citas=[newCita].concat(_toConsumableArray(diaActivo.citas));dispatch(setToastActivo(msg));dispatch(agregarCita(newCita));dispatch(setDiaActivo(diaActivo));}case 12:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x5,_x6){return _ref3.apply(this,arguments);};}();};export var clearCitas=function clearCitas(){return{type:types.citasLimpiarCitas};};export var startLoadingCitas=function startLoadingCitas(){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var token,response,_yield$response$json,citas;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:token=localStorage.getItem('token');_context4.next=3;return fetchGetCitas(token);case 3:response=_context4.sent;_context4.next=6;return response.json();case 6:_yield$response$json=_context4.sent;citas=_yield$response$json.citas;citas.length>0?dispatch(setCitas(citas)):dispatch(setCitas([]));case 9:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x7){return _ref4.apply(this,arguments);};}();};export var setCitas=function setCitas(citas){return{type:types.citasSetCitas,payload:{citas:_toConsumableArray(citas)}};};","map":{"version":3,"sources":["/home/marceliux/Development/BoilerLog/NodeTask/src/client/src/actions/citas.js"],"names":["fetchPutCitas","fetchGetCitas","fetchPostCitas","fetchDeleteCitas","types","setCitasPaciente","setDiaActivo","setToastActivo","setCitaActiva","cita","type","citasSetCitaActiva","payload","removeCitaActiva","citasRemoveCitaActiva","startUpdateCita","dispatch","getState","citasPorPaciente","pacientes","diaActivo","ui","newCitas","map","v","_id","Object","keys","length","citas","val","token","localStorage","getItem","resp","json","ok","msg","newCita","refreshCitas","cancelCita","citasActualizarCitas","citasCancelarCita","startCancelingCita","updatedCita","agregarCita","citasAgregarCita","startAddingCita","paciente","horario","clearCitas","citasLimpiarCitas","startLoadingCitas","response","setCitas","citasSetCitas"],"mappings":"osBAAA,OAASA,aAAT,CAAwBC,aAAxB,CAAuCC,cAAvC,CAAuDC,gBAAvD,KAA+E,mBAA/E,CACA,OAAQC,KAAR,KAAoB,gBAApB,CACA,OAASC,gBAAT,KAAiC,aAAjC,CACA,OAASC,YAAT,CAAuBC,cAAvB,KAA6C,MAA7C,CAEA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,IAAD,QAAW,CACpCC,IAAI,CAAEN,KAAK,CAACO,kBADwB,CAEpCC,OAAO,kBACAH,IADA,CAF6B,CAAX,EAAtB,CAOP,MAAO,IAAMI,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,SAAO,CAACH,IAAI,CAAEN,KAAK,CAACU,qBAAb,CAAP,EAAzB,CAEP,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACN,IAAD,CAAU,CACrC,+FAAO,iBAAOO,QAAP,CAAiBC,QAAjB,qMAEIC,gBAFJ,CAEwBD,QAAQ,GAAGE,SAFnC,CAEID,gBAFJ,CAGIE,SAHJ,CAGiBH,QAAQ,GAAGI,EAH5B,CAGID,SAHJ,CAKGE,QALH,CAKcJ,gBAAgB,CAACK,GAAjB,CACb,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,GAAF,GAAUhB,IAAI,CAACgB,GAAf,CACHhB,IADG,CAEHe,CAFD,EADY,CALd,CAWH,GAAGE,MAAM,CAACC,IAAP,CAAYP,SAAZ,EAAuBQ,MAAvB,CAAgC,CAAnC,CAAsC,CAClCR,SAAS,CAACS,KAAV,CAAkBT,SAAS,CAACS,KAAV,CAAgBN,GAAhB,CAAqB,SAAAO,GAAG,QAAIA,CAAAA,GAAG,CAACL,GAAJ,GAAYhB,IAAI,CAACgB,GAAjB,CAAuBhB,IAAvB,CAA8BqB,GAAlC,EAAxB,CAAlB,CACAd,QAAQ,CAACV,YAAY,CAACc,SAAD,CAAb,CAAR,CACH,CAGKW,KAjBH,CAiBWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAjBX,uBAkBgBjC,CAAAA,aAAa,CAAC+B,KAAD,CAAQtB,IAAR,CAlB7B,QAkBGyB,IAlBH,sCAmB8BA,CAAAA,IAAI,CAACC,IAAL,EAnB9B,wCAmBIC,EAnBJ,kBAmBIA,EAnBJ,CAmBQC,GAnBR,kBAmBQA,GAnBR,CAmBaC,OAnBb,kBAmBaA,OAnBb,CAqBH,GAAGF,EAAH,CAAM,CACFpB,QAAQ,CAACT,cAAc,CAAC8B,GAAD,CAAf,CAAR,CACArB,QAAQ,CAACuB,YAAY,CAACD,OAAD,CAAb,CAAR,CACAtB,QAAQ,CAACX,gBAAgB,CAACiB,QAAD,CAAjB,CAAR,CACAN,QAAQ,CAACwB,UAAU,EAAX,CAAR,CACH,CA1BE,uDAAP,mEA6BH,CA9BM,CAgCP,GAAMD,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAC9B,IAAD,QAAW,CAC5BC,IAAI,CAAEN,KAAK,CAACqC,oBADgB,CAE5B7B,OAAO,CAAEH,IAFmB,CAAX,EAArB,CAKA,GAAM+B,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,SAAO,CAAC9B,IAAI,CAAEN,KAAK,CAACsC,iBAAb,CAAP,EAAnB,CAGA,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAClC,IAAD,CAAU,CACxC,gGAAO,kBAAOO,QAAP,CAAiBC,QAAjB,oLACGc,KADH,CACWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADX,wBAEgB9B,CAAAA,gBAAgB,CAAC4B,KAAD,CAAQtB,IAAI,CAACgB,GAAb,CAFhC,QAEGS,IAFH,uCAGwCA,CAAAA,IAAI,CAACC,IAAL,EAHxC,yCAGIC,EAHJ,mBAGIA,EAHJ,CAGQC,GAHR,mBAGQA,GAHR,CAGmBO,WAHnB,mBAGanC,IAHb,CAIIW,SAJJ,CAIiBH,QAAQ,GAAGI,EAJ5B,CAIID,SAJJ,CAMHA,SAAS,CAACS,KAAV,CAAkBT,SAAS,CAACS,KAAV,CAAgBN,GAAhB,CACd,SAAAd,IAAI,QAAIA,CAAAA,IAAI,CAACgB,GAAL,GAAamB,WAAW,CAACnB,GAAzB,CACNmB,WADM,CAENnC,IAFE,EADU,CAAlB,CAMA,GAAG2B,EAAH,CAAM,CACFpB,QAAQ,CAACwB,UAAU,EAAX,CAAR,CACAxB,QAAQ,CAACT,cAAc,CAAC8B,GAAD,CAAf,CAAR,CACArB,QAAQ,CAACuB,YAAY,CAACK,WAAD,CAAb,CAAR,CACA5B,QAAQ,CAACV,YAAY,CAACc,SAAD,CAAb,CAAR,CACH,CAjBE,yDAAP,qEAmBH,CApBM,CAsBP,GAAMyB,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACpC,IAAD,QAAW,CAC3BC,IAAI,CAAEN,KAAK,CAAC0C,gBADe,CAE3BlC,OAAO,kBACAH,IADA,CAFoB,CAAX,EAApB,CAQA,MAAO,IAAMsC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,QAAD,CAAWC,OAAX,CAAuB,CAClD,gGAAO,kBAAOjC,QAAP,CAAiBC,QAAjB,gLACGc,KADH,CACWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADX,wBAEgB/B,CAAAA,cAAc,CAAC6B,KAAD,CAAQiB,QAAR,CAAkBC,OAAlB,CAF9B,QAEGf,IAFH,uCAG8BA,CAAAA,IAAI,CAACC,IAAL,EAH9B,yCAGIC,EAHJ,mBAGIA,EAHJ,CAGQC,GAHR,mBAGQA,GAHR,CAGaC,OAHb,mBAGaA,OAHb,CAKIlB,SALJ,CAKiBH,QAAQ,GAAGI,EAL5B,CAKID,SALJ,CAQH,GAAGgB,EAAH,CAAM,CACFhB,SAAS,CAACS,KAAV,EAAmBS,OAAnB,4BAA+BlB,SAAS,CAACS,KAAzC,GACAb,QAAQ,CAACT,cAAc,CAAC8B,GAAD,CAAf,CAAR,CACArB,QAAQ,CAAC6B,WAAW,CAACP,OAAD,CAAZ,CAAR,CACAtB,QAAQ,CAACV,YAAY,CAACc,SAAD,CAAb,CAAR,CACH,CAbE,yDAAP,qEAeH,CAhBM,CAkBP,MAAO,IAAM8B,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,SAAO,CAACxC,IAAI,CAAEN,KAAK,CAAC+C,iBAAb,CAAP,EAAnB,CAEP,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAK,CAClC,gGAAO,kBAAMpC,QAAN,oKACGe,KADH,CACWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADX,wBAGoBhC,CAAAA,aAAa,CAAC8B,KAAD,CAHjC,QAGGsB,QAHH,uCAImBA,CAAAA,QAAQ,CAAClB,IAAT,EAJnB,4CAIIN,KAJJ,sBAIIA,KAJJ,CAMHA,KAAK,CAACD,MAAN,CAAe,CAAf,CAAmBZ,QAAQ,CAACsC,QAAQ,CAACzB,KAAD,CAAT,CAA3B,CAA+Cb,QAAQ,CAACsC,QAAQ,CAAC,EAAD,CAAT,CAAvD,CANG,wDAAP,iEAQH,CATM,CAWP,MAAO,IAAMA,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACzB,KAAD,QAAY,CAChCnB,IAAI,CAAEN,KAAK,CAACmD,aADoB,CAEhC3C,OAAO,CAAC,CACJiB,KAAK,oBAAMA,KAAN,CADD,CAFwB,CAAZ,EAAjB","sourcesContent":["import { fetchPutCitas, fetchGetCitas, fetchPostCitas, fetchDeleteCitas } from '../services/fetch'\nimport {types} from '../types/types'\nimport { setCitasPaciente } from './pacientes'\nimport { setDiaActivo, setToastActivo } from './ui'\n\nexport const setCitaActiva = (cita) => ({\n    type: types.citasSetCitaActiva,\n    payload: {\n        ...cita\n    }\n})\n\nexport const removeCitaActiva = () => ({type: types.citasRemoveCitaActiva})\n\nexport const startUpdateCita = (cita) => {\n    return async (dispatch, getState) => {\n\n        const {citasPorPaciente} = getState().pacientes\n        const {diaActivo} = getState().ui\n\n        const newCitas = citasPorPaciente.map(\n            v => v._id === cita._id\n            ? cita\n            : v\n        )\n\n        if(Object.keys(diaActivo).length > 0) {\n            diaActivo.citas = diaActivo.citas.map( val => val._id === cita._id ? cita : val)\n            dispatch(setDiaActivo(diaActivo))\n        }\n\n\n        const token = localStorage.getItem('token')\n        const resp = await fetchPutCitas(token, cita)\n        const {ok, msg, newCita} = await resp.json()\n\n        if(ok){\n            dispatch(setToastActivo(msg))\n            dispatch(refreshCitas(newCita))\n            dispatch(setCitasPaciente(newCitas))\n            dispatch(cancelCita())\n        }\n        \n    }\n}\n\nconst refreshCitas = (cita) => ({\n    type: types.citasActualizarCitas,\n    payload: cita\n})\n\nconst cancelCita = () => ({type: types.citasCancelarCita})\n\n\nexport const startCancelingCita = (cita) => {\n    return async (dispatch, getState) =>{\n        const token = localStorage.getItem('token')\n        const resp = await fetchDeleteCitas(token, cita._id)\n        const {ok, msg, cita: updatedCita} = await resp.json()\n        const {diaActivo} = getState().ui\n\n        diaActivo.citas = diaActivo.citas.map(\n            cita => cita._id === updatedCita._id\n            ? updatedCita\n            : cita\n        )\n                        \n        if(ok){\n            dispatch(cancelCita())\n            dispatch(setToastActivo(msg))\n            dispatch(refreshCitas(updatedCita))\n            dispatch(setDiaActivo(diaActivo))\n        }\n    }\n}\n\nconst agregarCita = (cita) => ({\n    type: types.citasAgregarCita,\n    payload: {\n        ...cita\n    }\n})\n\n\nexport const startAddingCita = (paciente, horario) => {\n    return async (dispatch, getState) =>{\n        const token = localStorage.getItem('token')\n        const resp = await fetchPostCitas(token, paciente, horario)\n        const {ok, msg, newCita} = await resp.json()\n        \n        const {diaActivo} = getState().ui\n\n                \n        if(ok){\n            diaActivo.citas = [newCita, ...diaActivo.citas]\n            dispatch(setToastActivo(msg))\n            dispatch(agregarCita(newCita))\n            dispatch(setDiaActivo(diaActivo))\n        }\n    }\n}\n\nexport const clearCitas = () => ({type: types.citasLimpiarCitas})\n\nexport const startLoadingCitas = () =>{\n    return async dispatch => {\n        const token = localStorage.getItem('token')\n\n        const response = await fetchGetCitas(token)\n        const {citas} = await response.json()\n\n        citas.length > 0 ? dispatch(setCitas(citas)) : dispatch(setCitas([]))\n    }\n}\n\nexport const setCitas = (citas) => ({\n    type: types.citasSetCitas,\n    payload:{\n        citas: [...citas]\n    }\n})\n"]},"metadata":{},"sourceType":"module"}