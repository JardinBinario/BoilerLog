{"ast":null,"code":"import _regeneratorRuntime from\"/home/marceliux/Development/BoilerLog/NodeTask/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/marceliux/Development/BoilerLog/NodeTask/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{fetchPutHorarioCita}from'../services/fetch';import{types}from'../types/types';export var setSelectedHorario=function setSelectedHorario(_ref){var target=_ref.target;return{type:types.horariosSetHorario,payload:{horario:target.value}};};export var startUpdateCitaConHorario=function startUpdateCitaConHorario(_id){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch,getState){var horarioActivo,resp,body;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:horarioActivo=getState().horarios.horarioActivo;parseInt(horarioActivo);_context.next=4;return fetchPutHorarioCita(_id,horarioActivo);case 4:resp=_context.sent;_context.next=7;return resp.json();case 7:body=_context.sent;// TODO do something here\nconsole.log(body);case 9:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2){return _ref2.apply(this,arguments);};}();};","map":{"version":3,"sources":["/home/marceliux/Development/BoilerLog/NodeTask/client/src/actions/horarios.js"],"names":["fetchPutHorarioCita","types","setSelectedHorario","target","type","horariosSetHorario","payload","horario","value","startUpdateCitaConHorario","_id","dispatch","getState","horarioActivo","horarios","parseInt","resp","json","body","console","log"],"mappings":"qVAAA,OAASA,mBAAT,KAAoC,mBAApC,CACA,OAAQC,KAAR,KAAoB,gBAApB,CAGA,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,UAAEC,CAAAA,MAAF,MAAEA,MAAF,OAAe,CAC7CC,IAAI,CAAEH,KAAK,CAACI,kBADiC,CAE7CC,OAAO,CAAC,CACJC,OAAO,CAAEJ,MAAM,CAACK,KADZ,CAFqC,CAAf,EAA3B,CAOP,MAAO,IAAMC,CAAAA,yBAAyB,CAAG,QAA5BA,CAAAA,yBAA4B,CAACC,GAAD,CAAS,CAC9C,gGAAO,iBAAOC,QAAP,CAAiBC,QAAjB,8IACIC,aADJ,CACqBD,QAAQ,GAAGE,QADhC,CACID,aADJ,CAGHE,QAAQ,CAACF,aAAD,CAAR,CAHG,sBAKgBb,CAAAA,mBAAmB,CAACU,GAAD,CAAMG,aAAN,CALnC,QAKGG,IALH,qCAMgBA,CAAAA,IAAI,CAACC,IAAL,EANhB,QAMGC,IANH,eAOH;AACAC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EARG,sDAAP,oEAUH,CAXM","sourcesContent":["import { fetchPutHorarioCita } from '../services/fetch'\nimport {types} from '../types/types'\n\n\nexport const setSelectedHorario = ({target}) => ({\n    type: types.horariosSetHorario,\n    payload:{\n        horario: target.value\n    }\n})\n\nexport const startUpdateCitaConHorario = (_id) => {\n    return async (dispatch, getState) => {\n        const {horarioActivo} = getState().horarios\n        \n        parseInt(horarioActivo)\n\n        const resp = await fetchPutHorarioCita(_id, horarioActivo)\n        const body = await resp.json()\n        // TODO do something here\n        console.log(body)\n    }\n}"]},"metadata":{},"sourceType":"module"}