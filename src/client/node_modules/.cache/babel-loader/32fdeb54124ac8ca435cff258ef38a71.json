{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nexport const useCalendar = (citas, nav) => {\n  _s();\n\n  const [dateDisplay, setDateDisplay] = useState('');\n  const [dias, setDias] = useState([]);\n  useEffect(() => {\n    const citasPorDia = diaActual => citas.filter(cita => new Date(cita.fechaDeseada).toDateString() === new Date(diaActual).toDateString() && cita);\n\n    const capitalizar = word => word.charAt(0).toUpperCase() + word.slice(1);\n\n    const semana = ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'];\n    const fecha = new Date();\n    nav !== 0 && fecha.setMonth(new Date().getMonth() + nav);\n    const dia = fecha.getDate(),\n          mes = fecha.getMonth(),\n          anho = fecha.getFullYear();\n    const primerDiaDelMes = new Date(anho, mes, 1);\n    const diasEnMes = new Date(anho, mes + 1, 0).getDate();\n    const dateString = primerDiaDelMes.toLocaleDateString('es-us', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric'\n    });\n    const nombreDelPrimerDia = capitalizar(dateString.split(', ')[0]);\n    const diasComodinInicio = semana.indexOf(nombreDelPrimerDia);\n    setDateDisplay(`${capitalizar(fecha.toLocaleDateString('es', {\n      month: 'long'\n    }))}`);\n    const daysArr = [];\n\n    for (let i = 1; i <= diasComodinInicio + diasEnMes; i++) {\n      const diaActual = `${mes + 1}/${i - diasComodinInicio}/${anho}`;\n\n      if (i > diasComodinInicio) {\n        daysArr.push({\n          value: i - diasComodinInicio,\n          citas: citasPorDia(diaActual),\n          esHoy: diaActual.split('/')[1] === dia.toString() && nav === 0 ? true : false,\n          date: diaActual\n        });\n      } else {\n        daysArr.push({\n          value: 'padding',\n          citas: null,\n          esHoy: false,\n          date: ''\n        });\n      }\n    }\n\n    setDias(daysArr);\n  }, [citas, nav]);\n  return [dias, dateDisplay];\n};\n\n_s(useCalendar, \"QJGtnD+1hBwEqW+zLJPjY5qMOQw=\");","map":{"version":3,"sources":["/home/marceliux/Development/BoilerLog/NodeTask/src/client/src/components/hooks/useCalendar.js"],"names":["useState","useEffect","useCalendar","citas","nav","dateDisplay","setDateDisplay","dias","setDias","citasPorDia","diaActual","filter","cita","Date","fechaDeseada","toDateString","capitalizar","word","charAt","toUpperCase","slice","semana","fecha","setMonth","getMonth","dia","getDate","mes","anho","getFullYear","primerDiaDelMes","diasEnMes","dateString","toLocaleDateString","weekday","year","month","day","nombreDelPrimerDia","split","diasComodinInicio","indexOf","daysArr","i","push","value","esHoy","toString","date"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\n\nexport const useCalendar = (citas, nav) => {\n    \n    const [dateDisplay, setDateDisplay] = useState('')\n    const [dias, setDias] = useState([])\n\n    useEffect(()=>{\n\n        const citasPorDia = (diaActual) => \n        citas.filter( cita => new Date(cita.fechaDeseada).toDateString() === new Date(diaActual).toDateString() && cita )\n\n        const capitalizar = word => word.charAt(0).toUpperCase() + word.slice(1)\n        const semana = ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado']\n\n        const fecha = new Date()\n        nav !== 0 && fecha.setMonth(new Date().getMonth() + nav)\n        \n        const \n            dia = fecha.getDate(),\n            mes = fecha.getMonth(),\n            anho = fecha.getFullYear()\n    \n        const primerDiaDelMes = new Date(anho, mes, 1)\n        const diasEnMes = new Date(anho, mes + 1, 0).getDate()\n        const dateString = primerDiaDelMes.toLocaleDateString('es-us', {\n            weekday: 'long',\n            year: 'numeric',\n            month: 'numeric',\n            day: 'numeric'\n        })\n    \n\n        const nombreDelPrimerDia = capitalizar(dateString.split(', ')[0])\n        const diasComodinInicio = semana.indexOf(nombreDelPrimerDia)\n\n        setDateDisplay(`${capitalizar(fecha.toLocaleDateString('es', {month:'long'}))}`)\n\n        const daysArr = []\n\n        for(let i = 1; i<=diasComodinInicio + diasEnMes; i++){\n            const diaActual = `${mes+1}/${i - diasComodinInicio}/${anho}`\n            if(i > diasComodinInicio){\n                daysArr.push({\n                    value: i - diasComodinInicio,\n                    citas: citasPorDia(diaActual),\n                    esHoy: diaActual.split('/')[1] === dia.toString() && nav === 0 ? true : false,\n                    date: diaActual\n                })\n            }else{\n                daysArr.push({\n                    value: 'padding',\n                    citas: null,\n                    esHoy: false,\n                    date: ''\n                })\n            }\n        }\n\n        setDias(daysArr)\n\n    }, [citas, nav])\n\n    return [ dias, dateDisplay ]\n\n}"]},"metadata":{},"sourceType":"module"}