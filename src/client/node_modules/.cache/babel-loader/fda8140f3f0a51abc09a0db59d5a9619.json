{"ast":null,"code":"import { types } from '../types/types';\nconst initialState = {\n  isPacienteActive: false,\n  pacienteActivo: {},\n  totalPacientes: [],\n  citasPorPaciente: [],\n  archivosPorPaciente: []\n};\nexport const pacientesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.pacientesSetPacientes:\n      return { ...state,\n        totalPacientes: action.payload.pacientes\n      };\n\n    case types.pacientesActualizarPacientes:\n      return { ...state,\n        totalPacientes: state.totalPacientes.map(paciente => paciente._id === action.payload._id ? action.payload : paciente)\n      };\n\n    case types.pacienteSetPacienteActivo:\n      return { ...state,\n        isPacienteActive: true,\n        pacienteActivo: action.payload\n      };\n\n    case types.pacienteRemovePacienteActivo:\n      return { ...state,\n        isPacienteActive: false,\n        pacienteActivo: null\n      };\n\n    case types.pacienteSetCitasPaciente:\n      return { ...state,\n        citasPorPaciente: [...action.payload]\n      };\n\n    case types.pacienteSetArchivosPaciente:\n      return { ...state,\n        archivosPorPaciente: [...action.payload]\n      };\n\n    case types.pacienteClearPacientes:\n      return { ...state,\n        ...initialState\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/marceliux/Development/BoilerLog/NodeTask/src/client/src/reducers/pacientesReducer.js"],"names":["types","initialState","isPacienteActive","pacienteActivo","totalPacientes","citasPorPaciente","archivosPorPaciente","pacientesReducer","state","action","type","pacientesSetPacientes","payload","pacientes","pacientesActualizarPacientes","map","paciente","_id","pacienteSetPacienteActivo","pacienteRemovePacienteActivo","pacienteSetCitasPaciente","pacienteSetArchivosPaciente","pacienteClearPacientes"],"mappings":"AAAA,SAAQA,KAAR,QAAoB,gBAApB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,gBAAgB,EAAE,KADD;AAEjBC,EAAAA,cAAc,EAAE,EAFC;AAGjBC,EAAAA,cAAc,EAAE,EAHC;AAIjBC,EAAAA,gBAAgB,EAAE,EAJD;AAKjBC,EAAAA,mBAAmB,EAAE;AALJ,CAArB;AAQA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,KAAK,GAACP,YAAP,EAAqBQ,MAArB,KAA+B;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,KAAK,CAACW,qBAAX;AACI,aAAO,EACH,GAAGH,KADA;AAEHJ,QAAAA,cAAc,EAAEK,MAAM,CAACG,OAAP,CAAeC;AAF5B,OAAP;;AAKJ,SAAKb,KAAK,CAACc,4BAAX;AACI,aAAM,EACF,GAAGN,KADD;AAEFJ,QAAAA,cAAc,EAAEI,KAAK,CAACJ,cAAN,CAAqBW,GAArB,CACZC,QAAQ,IAAIA,QAAQ,CAACC,GAAT,KAAiBR,MAAM,CAACG,OAAP,CAAeK,GAAhC,GACVR,MAAM,CAACG,OADG,GAEVI,QAHU;AAFd,OAAN;;AASJ,SAAKhB,KAAK,CAACkB,yBAAX;AACI,aAAM,EACF,GAAGV,KADD;AAEFN,QAAAA,gBAAgB,EAAE,IAFhB;AAGFC,QAAAA,cAAc,EAAEM,MAAM,CAACG;AAHrB,OAAN;;AAMJ,SAAKZ,KAAK,CAACmB,4BAAX;AACI,aAAM,EACF,GAAGX,KADD;AAEFN,QAAAA,gBAAgB,EAAE,KAFhB;AAGFC,QAAAA,cAAc,EAAE;AAHd,OAAN;;AAMJ,SAAKH,KAAK,CAACoB,wBAAX;AACI,aAAM,EACF,GAAGZ,KADD;AAEFH,QAAAA,gBAAgB,EAAE,CAAC,GAAGI,MAAM,CAACG,OAAX;AAFhB,OAAN;;AAKJ,SAAKZ,KAAK,CAACqB,2BAAX;AACI,aAAM,EACF,GAAGb,KADD;AAEFF,QAAAA,mBAAmB,EAAE,CAAC,GAAGG,MAAM,CAACG,OAAX;AAFnB,OAAN;;AAMJ,SAAKZ,KAAK,CAACsB,sBAAX;AACI,aAAM,EACF,GAAGd,KADD;AAEF,WAAGP;AAFD,OAAN;;AAOJ;AACI,aAAOO,KAAP;AArDR;AAuDH,CAxDM","sourcesContent":["import {types} from '../types/types'\n\nconst initialState = {\n    isPacienteActive: false,\n    pacienteActivo: {},\n    totalPacientes: [],\n    citasPorPaciente: [],\n    archivosPorPaciente: []\n}\n\nexport const pacientesReducer = (state=initialState, action) =>{\n    switch (action.type) {\n        case types.pacientesSetPacientes:\n            return {\n                ...state,\n                totalPacientes: action.payload.pacientes\n            }\n            \n        case types.pacientesActualizarPacientes:\n            return{\n                ...state,\n                totalPacientes: state.totalPacientes.map(\n                    paciente => paciente._id === action.payload._id\n                    ? action.payload\n                    : paciente\n                )\n            }\n\n        case types.pacienteSetPacienteActivo:\n            return{\n                ...state,\n                isPacienteActive: true,\n                pacienteActivo: action.payload\n            }\n\n        case types.pacienteRemovePacienteActivo:\n            return{\n                ...state,\n                isPacienteActive: false,\n                pacienteActivo: null\n            }\n        \n        case types.pacienteSetCitasPaciente:\n            return{\n                ...state,\n                citasPorPaciente: [...action.payload]\n            }\n\n        case types.pacienteSetArchivosPaciente:\n            return{\n                ...state,\n                archivosPorPaciente: [...action.payload]\n            }\n        \n\n        case types.pacienteClearPacientes: \n            return{\n                ...state,\n                ...initialState\n            }\n        \n    \n\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}