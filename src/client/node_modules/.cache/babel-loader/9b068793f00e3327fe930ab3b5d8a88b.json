{"ast":null,"code":"import _regeneratorRuntime from\"/home/marceliux/Development/BoilerLog/NodeTask/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/marceliux/Development/BoilerLog/NodeTask/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/marceliux/Development/BoilerLog/NodeTask/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{Bar}from'react-chartjs-2';import{fetchPostReporte}from'../../../services/fetch';import{jsx as _jsx}from\"react/jsx-runtime\";export var BarChart=function BarChart(_ref){var reporte=_ref.reporte,desde=_ref.desde,hasta=_ref.hasta;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];useEffect(function(){function fetchReport(){return _fetchReport.apply(this,arguments);}function _fetchReport(){_fetchReport=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var token,response,parsedResponse;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:token=localStorage.getItem('token');_context.next=3;return fetchPostReporte(reporte,{desde:desde,hasta:hasta},token);case 3:response=_context.sent;_context.next=6;return response.json();case 6:parsedResponse=_context.sent;setData(parsedResponse.data);case 8:case\"end\":return _context.stop();}}},_callee);}));return _fetchReport.apply(this,arguments);}fetchReport();},[reporte,desde,hasta]);console.log(data);return/*#__PURE__*/_jsx(\"div\",{style:{margin:'auto'},children:/*#__PURE__*/_jsx(Bar,{id:\"report\",data:{labels:data.map(function(_ref2){var mes=_ref2.mes;return mes;}),datasets:[{label:\"\".concat(reporte),data:reporte==='Cantidad de citas'?data.map(function(_ref3){var citas=_ref3.citas;return citas;}):data.map(function(_ref4){var pacientes=_ref4.pacientes;return pacientes;}),backgroundColor:['rgba(255, 99, 132, 0.2)','rgba(54, 162, 235, 0.2)','rgba(255, 206, 86, 0.2)','rgba(75, 192, 192, 0.2)','rgba(153, 102, 255, 0.2)','rgba(255, 159, 64, 0.2)'],borderColor:['rgba(255, 99, 132, 1)','rgba(54, 162, 235, 1)','rgba(255, 206, 86, 1)','rgba(75, 192, 192, 1)','rgba(153, 102, 255, 1)','rgba(255, 159, 64, 1)'],borderWidth:1}]},height:630,width:1200,options:{maintainAspectRatio:true}})});};","map":{"version":3,"sources":["/home/marceliux/Development/BoilerLog/NodeTask/client/src/components/ui/reports/BarChart.jsx"],"names":["React","useEffect","useState","Bar","fetchPostReporte","BarChart","reporte","desde","hasta","data","setData","fetchReport","token","localStorage","getItem","response","json","parsedResponse","console","log","margin","labels","map","mes","datasets","label","citas","pacientes","backgroundColor","borderColor","borderWidth","maintainAspectRatio"],"mappings":"igBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAAQC,GAAR,KAAkB,iBAAlB,CACA,OAASC,gBAAT,KAAiC,yBAAjC,C,2CAGA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAA6B,IAA3BC,CAAAA,OAA2B,MAA3BA,OAA2B,CAAlBC,KAAkB,MAAlBA,KAAkB,CAAXC,KAAW,MAAXA,KAAW,eAEzBN,QAAQ,CAAC,EAAD,CAFiB,wCAE1CO,IAF0C,eAEpCC,OAFoC,eAIjDT,SAAS,CAAC,UAAI,SACKU,CAAAA,WADL,2IACV,qKACUC,KADV,CACkBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADlB,uBAE2BV,CAAAA,gBAAgB,CAACE,OAAD,CAAU,CAACC,KAAK,CAALA,KAAD,CAAQC,KAAK,CAALA,KAAR,CAAV,CAA0BI,KAA1B,CAF3C,QAEUG,QAFV,qCAGiCA,CAAAA,QAAQ,CAACC,IAAT,EAHjC,QAGUC,cAHV,eAIIP,OAAO,CAACO,cAAc,CAACR,IAAhB,CAAP,CAJJ,sDADU,8CAORE,WAAW,GAChB,CARQ,CAQN,CAACL,OAAD,CAAUC,KAAV,CAAiBC,KAAjB,CARM,CAAT,CAUAU,OAAO,CAACC,GAAR,CAAYV,IAAZ,EAEA,mBACI,YAAK,KAAK,CAAE,CAACW,MAAM,CAAE,MAAT,CAAZ,uBACI,KAAC,GAAD,EACI,EAAE,CAAC,QADP,CAEI,IAAI,CAAE,CACFC,MAAM,CAAEZ,IAAI,CAACa,GAAL,CAAS,mBAAEC,CAAAA,GAAF,OAAEA,GAAF,OAAWA,CAAAA,GAAX,EAAT,CADN,CAEFC,QAAQ,CAAE,CAAC,CACPC,KAAK,WAAKnB,OAAL,CADE,CAEPG,IAAI,CAAEH,OAAO,GAAK,mBAAZ,CAAkCG,IAAI,CAACa,GAAL,CAAS,mBAAEI,CAAAA,KAAF,OAAEA,KAAF,OAAaA,CAAAA,KAAb,EAAT,CAAlC,CAAkEjB,IAAI,CAACa,GAAL,CAAS,mBAAEK,CAAAA,SAAF,OAAEA,SAAF,OAAiBA,CAAAA,SAAjB,EAAT,CAFjE,CAGPC,eAAe,CAAE,CACb,yBADa,CAEb,yBAFa,CAGb,yBAHa,CAIb,yBAJa,CAKb,0BALa,CAMb,yBANa,CAHV,CAWPC,WAAW,CAAE,CACT,uBADS,CAET,uBAFS,CAGT,uBAHS,CAIT,uBAJS,CAKT,wBALS,CAMT,uBANS,CAXN,CAmBPC,WAAW,CAAE,CAnBN,CAAD,CAFR,CAFV,CA2BI,MAAM,CAAE,GA3BZ,CA4BI,KAAK,CAAE,IA5BX,CA6BI,OAAO,CAAE,CACLC,mBAAmB,CAAE,IADhB,CA7Bb,EADJ,EADJ,CAqCH,CArDM","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {Bar} from 'react-chartjs-2'\nimport { fetchPostReporte } from '../../../services/fetch'\n\n\nexport const BarChart = ({reporte, desde, hasta}) => {\n\n    const [data, setData] = useState([])\n\n    useEffect(()=>{\n        async function fetchReport() {\n            const token = localStorage.getItem('token')\n            const response = await fetchPostReporte(reporte, {desde, hasta}, token)\n            const parsedResponse = await response.json()\n            setData(parsedResponse.data)\n          }\n          fetchReport();\n    }, [reporte, desde, hasta])\n\n    console.log(data)\n\n    return (\n        <div style={{margin: 'auto'}}>\n            <Bar\n                id=\"report\" \n                data={{\n                    labels: data.map(({mes}) => mes),\n                    datasets: [{\n                        label: `${reporte}`,\n                        data: reporte === 'Cantidad de citas' ? data.map(({citas}) => citas) :  data.map(({pacientes}) => pacientes),\n                        backgroundColor: [\n                            'rgba(255, 99, 132, 0.2)',\n                            'rgba(54, 162, 235, 0.2)',\n                            'rgba(255, 206, 86, 0.2)',\n                            'rgba(75, 192, 192, 0.2)',\n                            'rgba(153, 102, 255, 0.2)',\n                            'rgba(255, 159, 64, 0.2)'\n                        ],\n                        borderColor: [\n                            'rgba(255, 99, 132, 1)',\n                            'rgba(54, 162, 235, 1)',\n                            'rgba(255, 206, 86, 1)',\n                            'rgba(75, 192, 192, 1)',\n                            'rgba(153, 102, 255, 1)',\n                            'rgba(255, 159, 64, 1)'\n                        ],\n                        borderWidth: 1\n                    }]\n                }}\n\n                height={630}\n                width={1200}\n                options={{\n                    maintainAspectRatio: true\n                }}\n            />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}